@page "/radios"
@using Microsoft.Extensions.Logging

@inject ILogger<Index> Logger

<Container Class="py-4">
    <Row>
        <Column>
            <Div Class="text-center" Margin="Margin.Is4.FromBottom">
                <Image Source="https://user-images.githubusercontent.com/4441470/224455560-91ed3ee7-f510-4041-a8d2-3fc093025112.png" Class="mb-3" Style="max-width: 200px;"/>
                <H1>Radios</H1>
                <Paragraph Class="lead">Comprehensive examples with forms and various states</Paragraph>
            </Div>
        </Column>
    </Row>

    <Row>
        <!-- Basic Usage -->
        <Column ColumnSize="@ColumnSize.Is6.OnLaptop" Margin="Margin.Is4.FromBottom">
            <Card Class="h-100">
                <CardHeader>
                    <H5 Class="card-title" Margin="Margin.Is0">Basic Usage</H5>
                </CardHeader>
                <CardBody>
                    <Paragraph Class="text-muted">Simple radio button group with manual state management</Paragraph>

                    <Div Class="form-check">
                        <Radio Name="basicGroup" Value="Option1" Checked="@(_basicSelected == "Option1")" OnClick="@(() => SelectBasic("Option1"))"/>
                        <Label Class="form-check-label">Option 1</Label>
                    </Div>
                    <Div Class="form-check">
                        <Radio Name="basicGroup" Value="Option2" Checked="@(_basicSelected == "Option2")" OnClick="@(() => SelectBasic("Option2"))"/>
                        <Label Class="form-check-label">Option 2</Label>
                    </Div>
                    <Div Class="form-check">
                        <Radio Name="basicGroup" Value="Option3" Checked="@(_basicSelected == "Option3")" OnClick="@(() => SelectBasic("Option3"))"/>
                        <Label Class="form-check-label">Option 3</Label>
                    </Div>

                    <Div Margin="Margin.Is3.FromTop">
                        <Small Class="text-muted">Selected: <Strong>@_basicSelected</Strong></Small>
                    </Div>
                </CardBody>
            </Card>
        </Column>

        <!-- Disabled States -->
        <Column ColumnSize="@ColumnSize.Is6.OnLaptop" Margin="Margin.Is4.FromBottom">
            <Card Class="h-100">
                <CardHeader>
                    <H5 Class="card-title" Margin="Margin.Is0">Disabled States</H5>
                </CardHeader>
                <CardBody>
                    <Paragraph Class="text-muted">Examples of disabled radio buttons</Paragraph>

                    <Div Margin="Margin.Is3.FromBottom">
                        <Label Class="form-label">Notification Preferences</Label>
                        <Div Class="form-check">
                            <Radio Name="notifications" Value="Email" Checked="@(_notificationPreference == "Email")"
                                   OnClick="@(() => _notificationPreference = "Email")"/>
                            <Label Class="form-check-label">Email</Label>
                        </Div>
                        <Div Class="form-check">
                            <Radio Name="notifications" Value="SMS" Checked="@(_notificationPreference == "SMS")"
                                   OnClick="@(() => _notificationPreference = "SMS")"/>
                            <Label Class="form-check-label">SMS</Label>
                        </Div>
                        <Div Class="form-check">
                            <Radio Name="notifications" Value="Push" Checked="@(_notificationPreference == "Push")"
                                   OnClick="@(() => _notificationPreference = "Push")" Disabled="true"/>
                            <Label Class="form-check-label text-muted">Push (Coming Soon)</Label>
                        </Div>
                        <Div Class="form-check">
                            <Radio Name="notifications" Value="None" Checked="@(_notificationPreference == "None")"
                                   OnClick="@(() => _notificationPreference = "None")" Disabled="true"/>
                            <Label Class="form-check-label text-muted">None (Disabled)</Label>
                        </Div>
                    </Div>

                    <Div Margin="Margin.Is3.FromTop">
                        <Small Class="text-muted">Selected: <Strong>@_notificationPreference</Strong></Small>
                    </Div>
                </CardBody>
            </Card>
        </Column>
    </Row>

    <Row>
        <!-- Event Handling Examples -->
        <Column ColumnSize="@ColumnSize.Is6.OnLaptop" Margin="Margin.Is4.FromBottom">
            <Card Class="h-100">
                <CardHeader>
                    <H5 Class="card-title" Margin="Margin.Is0">Event Handling</H5>
                </CardHeader>
                <CardBody>
                    <Paragraph Class="text-muted">Radio buttons with different event handling patterns</Paragraph>

                    <Div Margin="Margin.Is3.FromBottom">
                        <Label Class="form-label">Event Logging</Label>
                        <Div Class="form-check">
                            <Radio Name="eventGroup" Value="Click" Checked="@(_eventSelected == "Click")" 
                                   OnClick="@(() => HandleRadioClick("Click"))"/>
                            <Label Class="form-check-label">Click Event</Label>
                        </Div>
                        <Div Class="form-check">
                            <Radio Name="eventGroup" Value="Change" Checked="@(_eventSelected == "Change")" 
                                   OnChange="@((e) => HandleRadioChange(e, "Change"))"/>
                            <Label Class="form-check-label">Change Event</Label>
                        </Div>
                        <Div Class="form-check">
                            <Radio Name="eventGroup" Value="Focus" Checked="@(_eventSelected == "Focus")" 
                                   OnFocus="@(() => HandleRadioFocus("Focus"))"/>
                            <Label Class="form-check-label">Focus Event</Label>
                        </Div>
                    </Div>

                    <Div Margin="Margin.Is3.FromTop">
                        <Small Class="text-muted">Last Event: <Strong>@_lastEvent</Strong></Small>
                    </Div>
                </CardBody>
            </Card>
        </Column>

        <!-- Color Variants -->
        <Column ColumnSize="@ColumnSize.Is6.OnLaptop" Margin="Margin.Is4.FromBottom">
            <Card Class="h-100">
                <CardHeader>
                    <H5 Class="card-title" Margin="Margin.Is0">Color Variants</H5>
                </CardHeader>
                <CardBody>
                    <Paragraph Class="text-muted">Radio buttons with different colors</Paragraph>

                    <Div Margin="Margin.Is3.FromBottom">
                        <Label Class="form-label">Theme Selection</Label>
                        <Div Class="form-check">
                            <Radio Name="themeGroup" Value="Primary" Checked="@(_themeSelected == "Primary")" 
                                   BackgroundColor="Color.Primary" OnClick="@(() => SelectTheme("Primary"))"/>
                            <Label Class="form-check-label">Primary Theme</Label>
                        </Div>
                        <Div Class="form-check">
                            <Radio Name="themeGroup" Value="Success" Checked="@(_themeSelected == "Success")" 
                                   BackgroundColor="Color.Success" OnClick="@(() => SelectTheme("Success"))"/>
                            <Label Class="form-check-label">Success Theme</Label>
                        </Div>
                        <Div Class="form-check">
                            <Radio Name="themeGroup" Value="Warning" Checked="@(_themeSelected == "Warning")" 
                                   BackgroundColor="Color.Warning" OnClick="@(() => SelectTheme("Warning"))"/>
                            <Label Class="form-check-label">Warning Theme</Label>
                        </Div>
                        <Div Class="form-check">
                            <Radio Name="themeGroup" Value="Danger" Checked="@(_themeSelected == "Danger")" 
                                   BackgroundColor="Color.Danger" OnClick="@(() => SelectTheme("Danger"))"/>
                            <Label Class="form-check-label">Danger Theme</Label>
                        </Div>
                    </Div>

                    <Div Margin="Margin.Is3.FromTop">
                        <Small Class="text-muted">Selected Theme: <Strong>@_themeSelected</Strong></Small>
                    </Div>
                </CardBody>
            </Card>
        </Column>
    </Row>

    <Row>
        <!-- Size Variants -->
        <Column ColumnSize="@ColumnSize.Is6.OnLaptop" Margin="Margin.Is4.FromBottom">
            <Card Class="h-100">
                <CardHeader>
                    <H5 Class="card-title" Margin="Margin.Is0">Size Variants</H5>
                </CardHeader>
                <CardBody>
                    <Paragraph Class="text-muted">Radio buttons with different sizes</Paragraph>

                    <Div Margin="Margin.Is3.FromBottom">
                        <Label Class="form-label">Size Preference</Label>
                        <Div Class="form-check">
                            <Radio Name="sizeGroup" Value="Small" Checked="@(_sizeSelected == "Small")" 
                                   Size="Size.Small" OnClick="@(() => SelectSize("Small"))"/>
                            <Label Class="form-check-label">Small Size</Label>
                        </Div>
                        <Div Class="form-check">
                            <Radio Name="sizeGroup" Value="Default" Checked="@(_sizeSelected == "Default")" 
                                   Size="Size.Default" OnClick="@(() => SelectSize("Default"))"/>
                            <Label Class="form-check-label">Default Size</Label>
                        </Div>
                        <Div Class="form-check">
                            <Radio Name="sizeGroup" Value="Large" Checked="@(_sizeSelected == "Large")" 
                                   Size="Size.Large" OnClick="@(() => SelectSize("Large"))"/>
                            <Label Class="form-check-label">Large Size</Label>
                        </Div>
                    </Div>

                    <Div Margin="Margin.Is3.FromTop">
                        <Small Class="text-muted">Selected Size: <Strong>@_sizeSelected</Strong></Small>
                    </Div>
                </CardBody>
            </Card>
        </Column>

        <!-- Form Integration -->
        <Column ColumnSize="@ColumnSize.Is6.OnLaptop" Margin="Margin.Is4.FromBottom">
            <Card Class="h-100">
                <CardHeader>
                    <H5 Class="card-title" Margin="Margin.Is0">Form Integration</H5>
                </CardHeader>
                <CardBody>
                    <Paragraph Class="text-muted">Radio buttons integrated with form validation</Paragraph>

                    <Validations @ref="validations" Model="@formModel">
                        <Validation Action="ValidatePaymentMethod">
                            <Div Margin="Margin.Is3.FromBottom">
                                <Label Class="form-label">Payment Method</Label>
                                <Div Class="form-check">
                                    <Radio Name="paymentGroup" Value="CreditCard" Checked="@(formModel.PaymentMethod == "CreditCard")" 
                                           OnChange="@((e) => formModel.PaymentMethod = "CreditCard")" />
                                    <Label Class="form-check-label">Credit Card</Label>
                                </Div>
                                <Div Class="form-check">
                                    <Radio Name="paymentGroup" Value="PayPal" Checked="@(formModel.PaymentMethod == "PayPal")" 
                                           OnChange="@((e) => formModel.PaymentMethod = "PayPal")" />
                                    <Label Class="form-check-label">PayPal</Label>
                                </Div>
                                <Div Class="form-check">
                                    <Radio Name="paymentGroup" Value="BankTransfer" Checked="@(formModel.PaymentMethod == "BankTransfer")" 
                                           OnChange="@((e) => formModel.PaymentMethod = "BankTransfer")" />
                                    <Label Class="form-check-label">Bank Transfer</Label>
                                </Div>
                            </Div>
                            <ValidationError Class="mt-2" />
                        </Validation>

                        <Div Margin="Margin.Is3.FromTop">
                            <Button BackgroundColor="Color.Primary" OnClick="SubmitForm">Submit Form</Button>
                            <Span Margin="Margin.Is2.FromStart">@submitResult</Span>
                        </Div>
                    </Validations>
                </CardBody>
            </Card>
        </Column>
    </Row>

    <Row>
        <!-- Interactive Demo -->
        <Column>
            <Card>
                <CardHeader>
                    <H5 Class="card-title" Margin="Margin.Is0">Interactive Demo</H5>
                </CardHeader>
                <CardBody>
                    <Paragraph Class="text-muted">Master radio button that controls all others</Paragraph>

                    <Div Margin="Margin.Is3.FromBottom">
                        <Label Class="form-label">Master Control</Label>
                        <Div Class="form-check">
                            <Radio Name="masterGroup" Value="All" Checked="@_masterSelected" 
                                   OnClick="@(() => ToggleMaster())"/>
                            <Label Class="form-check-label">Select All Options</Label>
                        </Div>
                    </Div>

                    <Div Margin="Margin.Is3.FromBottom">
                        <Label Class="form-label">Controlled Options</Label>
                        <Div Class="form-check">
                            <Radio Name="controlledGroup" Value="Option1" Checked="@_masterSelected" 
                                   Disabled="@(!_masterSelected)" />
                            <Label Class="form-check-label">Option 1</Label>
                        </Div>
                        <Div Class="form-check">
                            <Radio Name="controlledGroup" Value="Option2" Checked="@_masterSelected" 
                                   Disabled="@(!_masterSelected)" />
                            <Label Class="form-check-label">Option 2</Label>
                        </Div>
                        <Div Class="form-check">
                            <Radio Name="controlledGroup" Value="Option3" Checked="@_masterSelected" 
                                   Disabled="@(!_masterSelected)" />
                            <Label Class="form-check-label">Option 3</Label>
                        </Div>
                    </Div>

                    <Div Margin="Margin.Is3.FromTop">
                        <Small Class="text-muted">Master Status: <Strong>@(_masterSelected ? "Enabled" : "Disabled")</Strong></Small>
                    </Div>
                </CardBody>
            </Card>
        </Column>
    </Row>
</Container>

@code {
    // Basic usage
    private string _basicSelected = "Option1";

    // Disabled states
    private string _notificationPreference = "Email";

    // Event handling
    private string _eventSelected = "Click";
    private string _lastEvent = "None";

    // Color variants
    private string _themeSelected = "Primary";

    // Size variants
    private string _sizeSelected = "Default";

    // Form integration
    private Validations? validations;
    private FormModel formModel = new();
    private string submitResult = string.Empty;

    // Interactive demo
    private bool _masterSelected = false;

    protected override void OnInitialized()
    {
        Logger.LogInformation("Radios demo page initialized");
    }

    private void SelectBasic(string option)
    {
        _basicSelected = option;
        StateHasChanged();
    }

    private void HandleRadioClick(string value)
    {
        _eventSelected = value;
        _lastEvent = $"Click: {value} at {DateTime.Now:HH:mm:ss}";
        StateHasChanged();
    }

    private void HandleRadioChange(ChangeEventArgs e, string value)
    {
        _eventSelected = value;
        _lastEvent = $"Change: {value} at {DateTime.Now:HH:mm:ss}";
        StateHasChanged();
    }

    private void HandleRadioFocus(string value)
    {
        _eventSelected = value;
        _lastEvent = $"Focus: {value} at {DateTime.Now:HH:mm:ss}";
        StateHasChanged();
    }

    private void SelectTheme(string theme)
    {
        _themeSelected = theme;
        StateHasChanged();
    }

    private void SelectSize(string size)
    {
        _sizeSelected = size;
        StateHasChanged();
    }

    private async Task SubmitForm()
    {
        if (validations is null)
            return;

        var ok = await validations.Validate();
        submitResult = ok ? "Form submitted successfully!" : "Please fix validation errors.";
        StateHasChanged();
    }

    private void ToggleMaster()
    {
        _masterSelected = !_masterSelected;
        StateHasChanged();
    }

    private void ValidatePaymentMethod(ValidatorEventArgs args)
    {
        var paymentMethod = args.Value?.ToString();
        if (string.IsNullOrEmpty(paymentMethod))
        {
            args.Status = ValidationStatus.Error;
            args.ErrorText = "Please select a payment method.";
        }
        else
        {
            args.Status = ValidationStatus.Success;
        }
    }

    public class FormModel
    {
        public string PaymentMethod { get; set; } = string.Empty;
    }
}