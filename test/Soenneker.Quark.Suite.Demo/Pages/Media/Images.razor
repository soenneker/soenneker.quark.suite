@page "/media/images"
@using Microsoft.Extensions.Logging
@using Soenneker.Extensions.String

@inject ILogger<Index> Logger

<Container Padding="Padding.Is4.OnY">
    <Row>
        <Column>
            <Div Class="text-center" Margin="Margin.Is5.FromEnd">
                <H1 Class="display-4 fw-bold text-primary">Images</H1>
                <Paragraph Class="lead text-muted">This page demonstrates the Image component functionality.</Paragraph>
            </Div>
        </Column>
    </Row>

    <Row Gap="Gap.Is4">
        <Column>
            <Div>
                <H2>Basic Image</H2>
                <Paragraph>Simple image with default styling:</Paragraph>
                <Image Source="https://picsum.photos/300/200" Alt="Random image"/>

                <Hr/>

                <H2>Fluid Image</H2>
                <Paragraph>Image that takes up the full width of its container:</Paragraph>
                <Div MaxWidth="@("500px")">
                    <Image Source="https://picsum.photos/800/400" Alt="Fluid image" Fluid="true"/>
                </Div>

                <Hr/>

                <H2>Lazy Loading</H2>
                <Paragraph>Image with lazy loading enabled:</Paragraph>
                <Image Source="https://picsum.photos/400/300" Alt="Lazy loaded image" Lazy="true"/>

                <Hr/>

                <H2>Custom Dimensions</H2>
                <Paragraph>Image with custom width and height:</Paragraph>
                <Image Source="https://picsum.photos/250/150" Alt="Custom sized image" Width="250" Height="150"/>

                <Hr/>

                <H2>Responsive Images</H2>
                <Paragraph>Image with srcset for different screen sizes:</Paragraph>
                <Image Source="https://picsum.photos/400/300"
                       Alt="Responsive image"
                       SrcSet="https://picsum.photos/200/150 200w, https://picsum.photos/400/300 400w, https://picsum.photos/800/600 800w"
                       Sizes="(max-width: 600px) 200px, (max-width: 1200px) 400px, 800px"/>

                <Hr/>

                <H2>Custom CSS Classes</H2>
                <Paragraph>Image with custom CSS classes:</Paragraph>
                <Image Source="https://picsum.photos/300/200"
                       Alt="Custom styled image"
                       Class="rounded shadow"/>

                <Hr/>

                <H2>Image with Event Handlers</H2>
                <Paragraph>Image with load and error event handlers:</Paragraph>
                <Image Source="https://picsum.photos/300/200"
                       Alt="Image with events"
                       OnLoad="OnImageLoad"
                       OnError="OnImageError"/>

                @if (loadMessage.HasContent())
                {
                    <Alert BackgroundColor="BackgroundColor.Success" Margin="Margin.Is2.FromTop">@loadMessage</Alert>
                }

                @if (errorMessage.HasContent())
                {
                    <Alert BackgroundColor="BackgroundColor.Danger" Margin="Margin.Is2.FromTop">@errorMessage</Alert>
                }

                <Hr/>

                <H2>Image Gallery</H2>
                <Paragraph>Multiple images in a responsive grid:</Paragraph>
                <Row>
                    @for (var i = 1; i <= 6; i++)
                    {
                        var imageSource = $"https://picsum.photos/300/200?random={i}";
                        var imageAlt = $"Gallery image {i}";
                        <Column ColumnSize="@ColumnSize.Is4.OnTablet" Margin="Margin.Is3.FromEnd">
                            <Image Source="@imageSource"
                                   Alt="@imageAlt"
                                   Class="img-fluid rounded"/>
                        </Column>
                    }
                </Row>
            </Div>
        </Column>
    </Row>
</Container>

@code {
    private string? loadMessage;
    private string? errorMessage;

    protected override void OnInitialized()
    {
        Logger.LogInformation("Image demo page initialized");
    }

    private void OnImageLoad(ProgressEventArgs args)
    {
        loadMessage = "Image loaded successfully!";
        errorMessage = null;
        StateHasChanged();
    }

    private void OnImageError(ErrorEventArgs args)
    {
        errorMessage = "Failed to load image!";
        loadMessage = null;
        StateHasChanged();
    }
}