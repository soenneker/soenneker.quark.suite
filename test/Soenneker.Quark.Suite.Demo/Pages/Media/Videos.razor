@page "/media/videos"
@using Microsoft.Extensions.Logging

@inject ILogger<Index> Logger

<Container Padding="Padding.Is4.OnY">
    <Row>
        <Column>
            <Div TextAlignment="TextAlignment.Center" Margin="Margin.Is5.FromEnd">
                <H1 Class="display-4" FontWeight="FontWeight.Bold" TextColor="TextColor.Primary">Video & Audio</H1>
                <Paragraph Class="lead" TextColor="TextColor.Muted">HTML5 video and audio player components with comprehensive controls and event handling.</Paragraph>
            </Div>
        </Column>
    </Row>
    
    <Row Gap="Gap.Is4">
        <Column>
            <Section Class="surface" Margin="Margin.Is5.FromBottom">
                <Div Class="surface-header d-flex align-items-center justify-content-between">
                    <Strong>Basic Video Player</Strong>
                </Div>
                <Div Class="surface-body">
                    <Row Gap="Gap.Is4">
                        <Column ColumnSize="@ColumnSize.Is12">
                            <Paragraph>Simple HTML5 video player with standard controls.</Paragraph>
                            <Video 
                                Source="https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4"
                                Poster="https://peach.blender.org/wp-content/uploads/title_anouncement.jpg?x11217"
                                Style="width: 100%; max-height: 400px;"
                                Border="Border.Is1"
                                BorderRadius="BorderRadius.Default"
                            />
                        </Column>
                    </Row>
                </Div>
            </Section>
        </Column>
    </Row>

    <Row Gap="Gap.Is4">
        <Column>
            <Section Class="surface" Margin="Margin.Is5.FromBottom">
                <Div Class="surface-header d-flex align-items-center justify-content-between">
                    <Strong>Video with Options</Strong>
                </Div>
                <Div Class="surface-body">
                    <Row Gap="Gap.Is4">
                        <Column ColumnSize="@ColumnSize.Is12">
                            <Paragraph>Video player with autoplay, loop, and muted options enabled.</Paragraph>
                            <Video 
                                Source="https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerBlazes.mp4"
                                Autoplay="true"
                                Loop="true"
                                Muted="true"
                                PlaysInline="true"
                                Style="width: 100%; max-height: 300px;"
                                Border="Border.Is1"
                                BorderRadius="BorderRadius.Default"
                            />
                            <Div Margin="Margin.Is3.FromTop">
                                <Badge BackgroundColor="@BackgroundColor.Info">Autoplay</Badge>
                                <Badge BackgroundColor="@BackgroundColor.Success" Margin="Margin.Is2.FromStart">Loop</Badge>
                                <Badge BackgroundColor="@BackgroundColor.Warning" Margin="Margin.Is2.FromStart">Muted</Badge>
                            </Div>
                        </Column>
                    </Row>
                </Div>
            </Section>
        </Column>
    </Row>

    <Row Gap="Gap.Is4">
        <Column>
            <Section Class="surface" Margin="Margin.Is5.FromBottom">
                <Div Class="surface-header d-flex align-items-center justify-content-between">
                    <Strong>Video with Event Handling</Strong>
                </Div>
                <Div Class="surface-body">
                    <Row Gap="Gap.Is4">
                        <Column ColumnSize="@ColumnSize.Is12">
                            <Paragraph>Video with event callbacks for play, pause, and ended states.</Paragraph>
                            
                            @if (!string.IsNullOrEmpty(videoStatus))
                            {
                                <Alert BackgroundColor="@GetStatusColor()">
                                    <Icon Name="@GetStatusIcon()" Margin="Margin.Is2.FromEnd"/> @videoStatus
                                </Alert>
                            }
                            
                            <Video 
                                Source="https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerEscapes.mp4"
                                OnPlay="HandleVideoPlay"
                                OnPause="HandleVideoPause"
                                OnEnded="HandleVideoEnded"
                                Style="width: 100%; max-height: 350px;"
                                Border="Border.Is1"
                                BorderRadius="BorderRadius.Default"
                            />
                        </Column>
                    </Row>
                </Div>
            </Section>
        </Column>
    </Row>

    <Row Gap="Gap.Is4">
        <Column>
            <Section Class="surface" Margin="Margin.Is5.FromBottom">
                <Div Class="surface-header d-flex align-items-center justify-content-between">
                    <Strong>Multiple Video Sources</Strong>
                </Div>
                <Div Class="surface-body">
                    <Row Gap="Gap.Is4">
                        <Column ColumnSize="@ColumnSize.Is12">
                            <Paragraph>Video with multiple source formats for browser compatibility.</Paragraph>
                            <Video 
                                Poster="https://peach.blender.org/wp-content/uploads/title_anouncement.jpg?x11217"
                                Style="width: 100%; max-height: 400px;"
                                Border="Border.Is1"
                                BorderRadius="BorderRadius.Default"
                            >
                                <source src="https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ElephantsDream.mp4" type="video/mp4" />
                                <Text>Your browser does not support the video tag.</Text>
                            </Video>
                        </Column>
                    </Row>
                </Div>
            </Section>
        </Column>
    </Row>

    <Row Gap="Gap.Is4">
        <Column>
            <Section Class="surface" Margin="Margin.Is5.FromBottom">
                <Div Class="surface-header d-flex align-items-center justify-content-between">
                    <Strong>Audio Player</Strong>
                </Div>
                <Div Class="surface-body">
                    <Row Gap="Gap.Is4">
                        <Column ColumnSize="@ColumnSize.Is12">
                            <Paragraph>Basic HTML5 audio player with controls.</Paragraph>
                            <Audio 
                                Source="https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3"
                                Class="w-100"
                            />
                        </Column>
                    </Row>
                </Div>
            </Section>
        </Column>
    </Row>

    <Row Gap="Gap.Is4">
        <Column>
            <Section Class="surface" Margin="Margin.Is5.FromBottom">
                <Div Class="surface-header d-flex align-items-center justify-content-between">
                    <Strong>Audio with Events</Strong>
                </Div>
                <Div Class="surface-body">
                    <Row Gap="Gap.Is4">
                        <Column ColumnSize="@ColumnSize.Is12">
                            <Paragraph>Audio player with play/pause event tracking.</Paragraph>
                            
                            @if (!string.IsNullOrEmpty(audioStatus))
                            {
                                <Alert BackgroundColor="@BackgroundColor.Info">
                                    <Icon Name="music" Margin="Margin.Is2.FromEnd"/> @audioStatus
                                </Alert>
                            }
                            
                            <Audio 
                                Source="https://www.soundhelix.com/examples/mp3/SoundHelix-Song-2.mp3"
                                OnPlay="HandleAudioPlay"
                                OnPause="HandleAudioPause"
                                OnEnded="HandleAudioEnded"
                                Class="w-100"
                            />
                        </Column>
                    </Row>
                </Div>
            </Section>
        </Column>
    </Row>

    <Row Gap="Gap.Is4">
        <Column>
            <Section Class="surface" Margin="Margin.Is5.FromBottom">
                <Div Class="surface-header d-flex align-items-center justify-content-between">
                    <Strong>Audio with Loop</Strong>
                </Div>
                <Div Class="surface-body">
                    <Row Gap="Gap.Is4">
                        <Column ColumnSize="@ColumnSize.Is12">
                            <Paragraph>Audio player configured to loop continuously.</Paragraph>
                            <Audio 
                                Source="https://www.soundhelix.com/examples/mp3/SoundHelix-Song-3.mp3"
                                Loop="true"
                                Class="w-100"
                            />
                            <Div Margin="Margin.Is2.FromTop">
                                <Badge BackgroundColor="@BackgroundColor.Success">Looping Enabled</Badge>
                            </Div>
                        </Column>
                    </Row>
                </Div>
            </Section>
        </Column>
    </Row>
</Container>

@code {
    private string? videoStatus;
    private string? audioStatus;

    private void HandleVideoPlay(EventArgs args)
    {
        videoStatus = "Video is playing";
        Logger.LogInformation("Video started playing");
    }

    private void HandleVideoPause(EventArgs args)
    {
        videoStatus = "Video paused";
        Logger.LogInformation("Video paused");
    }

    private void HandleVideoEnded(EventArgs args)
    {
        videoStatus = "Video has ended";
        Logger.LogInformation("Video ended");
    }

    private void HandleAudioPlay(EventArgs args)
    {
        audioStatus = "Audio is playing";
        Logger.LogInformation("Audio started playing");
    }

    private void HandleAudioPause(EventArgs args)
    {
        audioStatus = "Audio paused";
        Logger.LogInformation("Audio paused");
    }

    private void HandleAudioEnded(EventArgs args)
    {
        audioStatus = "Audio has ended";
        Logger.LogInformation("Audio ended");
    }

    private BackgroundColorBuilder GetStatusColor()
    {
        return videoStatus switch
        {
            "Video is playing" => BackgroundColor.Success,
            "Video paused" => BackgroundColor.Warning,
            "Video has ended" => BackgroundColor.Info,
            _ => BackgroundColor.Secondary
        };
    }

    private string GetStatusIcon()
    {
        return videoStatus switch
        {
            "Video is playing" => "play",
            "Video paused" => "pause",
            "Video has ended" => "check",
            _ => "info"
        };
    }
}

