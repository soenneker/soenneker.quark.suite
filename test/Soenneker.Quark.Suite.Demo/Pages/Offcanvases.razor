@page "/offcanvas"
@using Microsoft.Extensions.Logging

@inject ILogger<Index> Logger

<Container Padding="Padding.Is4.OnY">
    <Row>
        <Column>
            <Div Class="text-center" Margin="Margin.Is5.FromEnd">
                <H1 Class="display-4 fw-bold text-primary">Offcanvas</H1>
                <Paragraph Class="lead text-muted">This page demonstrates the offcanvas component functionality.</Paragraph>
            </Div>
        </Column>
    </Row>

    <Row Gap="Gap.Is4">
        <Column>
            <Div>
                <H2>Start Offcanvas</H2>
                <Div Margin="Margin.Is3.FromEnd">
                    <Button BackgroundColor="@BackgroundColor.Primary" OnClick="@(() => ShowStartOffcanvas = true)">Show Start Offcanvas</Button>
                </Div>
            </Div>

            <Hr/>

            <Div>
                <H2>End Offcanvas</H2>
                <Div Margin="Margin.Is3.FromEnd">
                    <Button BackgroundColor="@BackgroundColor.Success" OnClick="@(() => ShowEndOffcanvas = true)">Show End Offcanvas</Button>
                </Div>
            </Div>

            <Hr/>

            <Div>
                <H2>Top Offcanvas</H2>
                <Div Margin="Margin.Is3.FromEnd">
                    <Button BackgroundColor="@BackgroundColor.Info" OnClick="@(() => ShowTopOffcanvas = true)">Show Top Offcanvas</Button>
                </Div>
            </Div>

            <Hr/>

            <Div>
                <H2>Bottom Offcanvas</H2>
                <Div Margin="Margin.Is3.FromEnd">
                    <Button BackgroundColor="@BackgroundColor.Warning" OnClick="@(() => ShowBottomOffcanvas = true)">Show Bottom Offcanvas</Button>
                </Div>
            </Div>

            <Hr/>

            <Div>
                <H2>No Backdrop Offcanvas</H2>
                <Div Margin="Margin.Is3.FromEnd">
                    <Button BackgroundColor="@BackgroundColor.Secondary" OnClick="@(() => ShowNoBackdropOffcanvas = true)">Show No Backdrop</Button>
                </Div>
            </Div>

            <Hr/>

            <Div>
                <H2>Scrollable Offcanvas</H2>
                <Div Margin="Margin.Is3.FromEnd">
                    <Button BackgroundColor="@BackgroundColor.Dark" OnClick="@(() => ShowScrollableOffcanvas = true)">Show Scrollable</Button>
                </Div>
            </Div>
        </Column>
    </Row>
</Container>

<!-- Start Offcanvas -->
<Offcanvas @ref="_startOffcanvasRef" Placement="@PlacementType.Start" ShowBackdrop="true">
    <OffcanvasHeader Title="Start Offcanvas" ShowCloseButton="true">
    </OffcanvasHeader>
    <OffcanvasBody>
        <p>This is a start offcanvas that slides in from the left side.</p>
        <p>You can close it by clicking the X button, clicking outside the offcanvas, or pressing the ESC key.</p>

        <h6>Features:</h6>
        <ul>
            <li>Slides in from the left</li>
            <li>Has a backdrop</li>
            <li>Can be closed by clicking outside</li>
        </ul>

        <Div Margin="Margin.Is3.FromTop">
            <Button Class="btn-primary" OnClick="@(() => _startOffcanvasRef?.Hide())">Close Offcanvas</Button>
        </Div>
    </OffcanvasBody>
</Offcanvas>

<!-- End Offcanvas -->
<Offcanvas @ref="_endOffcanvasRef" Placement="@PlacementType.End" ShowBackdrop="true">
    <OffcanvasHeader Title="End Offcanvas" ShowCloseButton="true">
    </OffcanvasHeader>
    <OffcanvasBody>
        <p>This is an end offcanvas that slides in from the right side.</p>
        <p>This is the default placement for offcanvas components.</p>

        <h6>Features:</h6>
        <ul>
            <li>Slides in from the right</li>
            <li>Has a backdrop</li>
            <li>Default placement</li>
        </ul>

        <Div Margin="Margin.Is3.FromTop">
            <Button Class="btn-success" OnClick="@(() => _endOffcanvasRef?.Hide())">Close Offcanvas</Button>
        </Div>
    </OffcanvasBody>
</Offcanvas>

<!-- Top Offcanvas -->
<Offcanvas @ref="_topOffcanvasRef" Placement="@PlacementType.Top" ShowBackdrop="true">
    <OffcanvasHeader Title="Top Offcanvas" ShowCloseButton="true">
    </OffcanvasHeader>
    <OffcanvasBody>
        <p>This is a top offcanvas that slides in from the top of the screen.</p>
        <p>Perfect for notifications or quick actions.</p>

        <h6>Features:</h6>
        <ul>
            <li>Slides in from the top</li>
            <li>Great for notifications</li>
            <li>Compact height</li>
        </ul>

        <Div Margin="Margin.Is3.FromTop">
            <Button Class="btn-info" OnClick="@(() => _topOffcanvasRef?.Hide())">Close Offcanvas</Button>
        </Div>
    </OffcanvasBody>
</Offcanvas>

<!-- Bottom Offcanvas -->
<Offcanvas @ref="_bottomOffcanvasRef" Placement="@PlacementType.Bottom" ShowBackdrop="true">
    <OffcanvasHeader Title="Bottom Offcanvas" ShowCloseButton="true">
    </OffcanvasHeader>
    <OffcanvasBody>
        <p>This is a bottom offcanvas that slides in from the bottom of the screen.</p>
        <p>Great for mobile-style interfaces or action sheets.</p>

        <h6>Features:</h6>
        <ul>
            <li>Slides in from the bottom</li>
            <li>Mobile-friendly</li>
            <li>Action sheet style</li>
        </ul>

        <Div Margin="Margin.Is3.FromTop">
            <Button Class="btn-warning" OnClick="@(() => _bottomOffcanvasRef?.Hide())">Close Offcanvas</Button>
        </Div>
    </OffcanvasBody>
</Offcanvas>

<!-- No Backdrop Offcanvas -->
<Offcanvas @ref="_noBackdropOffcanvasRef" Placement="@PlacementType.End" ShowBackdrop="false">
    <OffcanvasHeader Title="No Backdrop Offcanvas" ShowCloseButton="true">
    </OffcanvasHeader>
    <OffcanvasBody>
        <p>This offcanvas doesn't have a backdrop.</p>
        <p>You can still interact with the page content behind it.</p>

        <h6>Features:</h6>
        <ul>
            <li>No backdrop overlay</li>
            <li>Page remains interactive</li>
            <li>Must use close button to close</li>
        </ul>

        <Div Margin="Margin.Is3.FromTop">
            <Button Class="btn-secondary" OnClick="@(() => _noBackdropOffcanvasRef?.Hide())">Close Offcanvas</Button>
        </Div>
    </OffcanvasBody>
</Offcanvas>

<!-- Scrollable Offcanvas -->
<Offcanvas @ref="_scrollableOffcanvasRef" Placement="@PlacementType.End" ShowBackdrop="true">
    <OffcanvasHeader Title="Scrollable Offcanvas" ShowCloseButton="true">
    </OffcanvasHeader>
    <OffcanvasBody>
        <p>This offcanvas demonstrates scrollable content.</p>
        <p>When content exceeds the viewport height, it becomes scrollable.</p>

        @for (var i = 1; i <= 30; i++)
        {
            <p>This is line @i of content to demonstrate scrolling within the offcanvas.</p>
        }

        <p>You can scroll through all this content within the offcanvas.</p>

        <Div Margin="Margin.Is3.FromTop">
            <Button Class="btn-dark" OnClick="@(() => _scrollableOffcanvasRef?.Hide())">Close Offcanvas</Button>
        </Div>
    </OffcanvasBody>
</Offcanvas>

@code {
    private Offcanvas? _startOffcanvasRef;
    private Offcanvas? _endOffcanvasRef;
    private Offcanvas? _topOffcanvasRef;
    private Offcanvas? _bottomOffcanvasRef;
    private Offcanvas? _noBackdropOffcanvasRef;
    private Offcanvas? _scrollableOffcanvasRef;

    private bool ShowStartOffcanvas
    {
        get => _startOffcanvasRef?.IsVisible ?? false;
        set
        {
            if (value)
                _startOffcanvasRef?.Show();
            else
                _startOffcanvasRef?.Hide();
        }
    }

    private bool ShowEndOffcanvas
    {
        get => _endOffcanvasRef?.IsVisible ?? false;
        set
        {
            if (value)
                _endOffcanvasRef?.Show();
            else
                _endOffcanvasRef?.Hide();
        }
    }

    private bool ShowTopOffcanvas
    {
        get => _topOffcanvasRef?.IsVisible ?? false;
        set
        {
            if (value)
                _topOffcanvasRef?.Show();
            else
                _topOffcanvasRef?.Hide();
        }
    }

    private bool ShowBottomOffcanvas
    {
        get => _bottomOffcanvasRef?.IsVisible ?? false;
        set
        {
            if (value)
                _bottomOffcanvasRef?.Show();
            else
                _bottomOffcanvasRef?.Hide();
        }
    }

    private bool ShowNoBackdropOffcanvas
    {
        get => _noBackdropOffcanvasRef?.IsVisible ?? false;
        set
        {
            if (value)
                _noBackdropOffcanvasRef?.Show();
            else
                _noBackdropOffcanvasRef?.Hide();
        }
    }

    private bool ShowScrollableOffcanvas
    {
        get => _scrollableOffcanvasRef?.IsVisible ?? false;
        set
        {
            if (value)
                _scrollableOffcanvasRef?.Show();
            else
                _scrollableOffcanvasRef?.Hide();
        }
    }

    protected override void OnInitialized()
    {
        Logger.LogInformation("Offcanvas demo page initialized");
    }

}