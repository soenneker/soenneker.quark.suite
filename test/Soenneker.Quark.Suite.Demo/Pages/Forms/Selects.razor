@page "/forms/selects"

<Container Padding="Padding.Is4.OnY">
<Row>
    <Column>
        <Div TextAlignment="TextAlignment.Center" Margin="Margin.Is5.FromEnd">
            <H1 DisplaySize="DisplaySize.Is4" FontWeight="FontWeight.Bold" TextColor="TextColor.Primary">Select Components</H1>
            <Paragraph Class="lead" TextColor="TextColor.Muted">Dropdown select components for choosing from a list of options.</Paragraph>
        </Div>
    </Column>
</Row>

<Row>
    <Column>
        <H2>ðŸ§ª BINDING TEST SECTION</H2>
        <Alert BackgroundColor="BackgroundColor.Info" Margin="Margin.Is3.FromEnd">
            <Strong>Test Instructions:</Strong> Select options below or click "Load Test Data" to verify binding works.
        </Alert>

        <Div Margin="Margin.Is4.FromBottom" Padding="Padding.Is3" BackgroundColor="BackgroundColor.Light" BorderRadius="BorderRadius.Is">
            <H3 Margin="Margin.Is3.FromBottom">Two-Way Binding Test</H3>

            <Div Margin="Margin.Is3.FromBottom">
                <Label For="testSelect1" Form="true" FontWeight="FontWeight.Bold">Test Select 1 (String):</Label>
                <Select TValue="string" Id="testSelect1" @bind-SelectedValue="_testSelect1" DefaultItemText="Select an option...">
                    <SelectItem TValue="string" Value="@("option1")" Text="Option 1"/>
                    <SelectItem TValue="string" Value="@("option2")" Text="Option 2"/>
                    <SelectItem TValue="string" Value="@("option3")" Text="Option 3"/>
                    <SelectItem TValue="string" Value="@("option4")" Text="Option 4"/>
                </Select>
                <Div Margin="Margin.Is2.FromTop" Padding="Padding.Is2" BackgroundColor="BackgroundColor.White" BorderRadius="BorderRadius.Is">
                    <Strong>Bound Value:</Strong> <Code>@(_testSelect1 ?? "(empty)")</Code>
                </Div>
            </Div>

            <Div Margin="Margin.Is3.FromBottom">
                <Label For="testSelect2" Form="true" FontWeight="FontWeight.Bold">Test Select 2 (Int, Pre-populated with 2):</Label>
                <Select TValue="int" Id="testSelect2" @bind-SelectedValue="_testSelect2" DefaultItemText="Select a number...">
                    <SelectItem TValue="int" Value="1" Text="One"/>
                    <SelectItem TValue="int" Value="2" Text="Two"/>
                    <SelectItem TValue="int" Value="3" Text="Three"/>
                    <SelectItem TValue="int" Value="4" Text="Four"/>
                </Select>
                <Div Margin="Margin.Is2.FromTop" Padding="Padding.Is2" BackgroundColor="BackgroundColor.White" BorderRadius="BorderRadius.Is">
                    <Strong>Bound Value:</Strong> <Code>@_testSelect2</Code>
                </Div>
            </Div>

            <Div Margin="Margin.Is3.FromTop">
                <Button BackgroundColor="BackgroundColor.Primary" OnClick="LoadSelectTestData" Margin="Margin.Is2.FromEnd">Load Test Data</Button>
                <Button BackgroundColor="BackgroundColor.Secondary" OnClick="ClearSelectTestData" Margin="Margin.Is2.FromEnd">Clear Test Data</Button>
                <Button BackgroundColor="BackgroundColor.Warning" OnClick="UpdateSelectTestData">Update to Different Values</Button>
            </Div>

            <Div Margin="Margin.Is3.FromTop" Padding="Padding.Is3" BackgroundColor="BackgroundColor.Success" Class="bg-opacity-10 rounded">
                <H4>Test Results:</H4>
                <UnorderedList Margin="Margin.Is0.FromBottom">
                    <UnorderedListItem>
                        <Strong>Select 1 (string):</Strong> @(_testSelect1 ?? "(not set)")
                    </UnorderedListItem>
                    <UnorderedListItem>
                        <Strong>Select 2 (int):</Strong> @_testSelect2
                    </UnorderedListItem>
                </UnorderedList>
            </Div>
        </Div>

        <Hr/>
    </Column>
</Row>

<Row>
    <Column ColumnSize="@ColumnSize.Is6.OnTablet">
        <Card>
            <CardHeader>
                <H4>Basic Select</H4>
            </CardHeader>
            <CardBody>
                <Field>
                    <FieldLabel>Choose a country</FieldLabel>
                    <Select TValue="string" @bind-SelectedValue="selectedCountry" DefaultItemText="Select a country...">
                        <SelectItem TValue="string" Value="@("us")" Text="United States"/>
                        <SelectItem TValue="string" Value="@("ca")" Text="Canada"/>
                        <SelectItem TValue="string" Value="@("mx")" Text="Mexico"/>
                        <SelectItem TValue="string" Value="@("uk")" Text="United Kingdom"/>
                        <SelectItem TValue="string" Value="@("de")" Text="Germany"/>
                        <SelectItem TValue="string" Value="@("fr")" Text="France"/>
                    </Select>
                </Field>
                <Small TextColor="@TextColor.Secondary">
                    Selected: @selectedCountry
                </Small>
            </CardBody>
        </Card>
    </Column>

    <Column ColumnSize="@ColumnSize.Is6.OnTablet">
        <Card>
            <CardHeader>
                <H4>Select with Groups</H4>
            </CardHeader>
            <CardBody>
                <Field>
                    <FieldLabel>Choose a city</FieldLabel>
                    <Select TValue="string" @bind-SelectedValue="selectedCity" DefaultItemText="Select a city...">
                        <SelectGroup Label="North America">
                            <SelectItem TValue="string" Value="@("nyc")" Text="New York"/>
                            <SelectItem TValue="string" Value="@("la")" Text="Los Angeles"/>
                            <SelectItem TValue="string" Value="@("toronto")" Text="Toronto"/>
                        </SelectGroup>
                        <SelectGroup Label="Europe">
                            <SelectItem TValue="string" Value="@("london")" Text="London"/>
                            <SelectItem TValue="string" Value="@("paris")" Text="Paris"/>
                            <SelectItem TValue="string" Value="@("berlin")" Text="Berlin"/>
                        </SelectGroup>
                    </Select>
                </Field>
                <Small TextColor="@TextColor.Secondary">
                    Selected: @selectedCity
                </Small>
            </CardBody>
        </Card>
    </Column>
</Row>

<Row Margin="Margin.Is4.FromTop">
    <Column ColumnSize="@ColumnSize.Is6.OnTablet">
        <Card>
            <CardHeader>
                <H4>Numeric Select</H4>
            </CardHeader>
            <CardBody>
                <Field>
                    <FieldLabel>Choose a number</FieldLabel>
                    <Select TValue="int" @bind-SelectedValue="selectedNumber" DefaultItemText="Pick a number...">
                        <SelectItem TValue="int" Value="@(1)" Text="One"/>
                        <SelectItem TValue="int" Value="@(2)" Text="Two"/>
                        <SelectItem TValue="int" Value="@(3)" Text="Three"/>
                        <SelectItem TValue="int" Value="@(4)" Text="Four"/>
                        <SelectItem TValue="int" Value="@(5)" Text="Five"/>
                    </Select>
                </Field>
                <Small TextColor="@TextColor.Secondary">
                    Selected: @selectedNumber
                </Small>
            </CardBody>
        </Card>
    </Column>

    <Column ColumnSize="@ColumnSize.Is6.OnTablet">
        <Card>
            <CardHeader>
                <H4>Select with Custom Options</H4>
            </CardHeader>
            <CardBody>
                <Field>
                    <FieldLabel>Choose a framework</FieldLabel>
                    <Select TValue="string" @bind-SelectedValue="selectedFramework" DefaultItemText="Select framework...">
                        <SelectItem TValue="string" Value="@("blazor")">
                            <Icon Name="microsoft" Margin="Margin.Is1.FromEnd"/>
                            Blazor
                        </SelectItem>
                        <SelectItem TValue="string" Value="@("react")">
                            <Icon Name="react" Margin="Margin.Is1.FromEnd"/>
                            React
                        </SelectItem>
                        <SelectItem TValue="string" Value="@("vue")">
                            <Icon Name="vue" Margin="Margin.Is1.FromEnd"/>
                            Vue.js
                        </SelectItem>
                        <SelectItem TValue="string" Value="@("angular")">
                            <Icon Name="angular" Margin="Margin.Is1.FromEnd"/>
                            Angular
                        </SelectItem>
                    </Select>
                </Field>
                <Small TextColor="@TextColor.Secondary">
                    Selected: @selectedFramework
                </Small>
            </CardBody>
        </Card>
    </Column>
</Row>

<Row Margin="Margin.Is4.FromTop">
    <Column ColumnSize="@ColumnSize.Is6.OnTablet">
        <Card>
            <CardHeader>
                <H4>Disabled Select</H4>
            </CardHeader>
            <CardBody>
                <Field>
                    <FieldLabel>Disabled dropdown</FieldLabel>
                    <Select TValue="string" @bind-SelectedValue="disabledValue" Disabled="true" DefaultItemText="This is disabled...">
                        <SelectItem TValue="string" Value="@("option1")" Text="Option 1"/>
                        <SelectItem TValue="string" Value="@("option2")" Text="Option 2"/>
                    </Select>
                </Field>
            </CardBody>
        </Card>
    </Column>

    <Column ColumnSize="@ColumnSize.Is6.OnTablet">
        <Card>
            <CardHeader>
                <H4>Required Select</H4>
            </CardHeader>
            <CardBody>
                <Field>
                    <FieldLabel>Required field <Text TextColor="@TextColor.Danger">*</Text></FieldLabel>
                    <Select TValue="string" @bind-SelectedValue="requiredValue" Required="true" DefaultItemText="Please select...">
                        <SelectItem TValue="string" Value="@("yes")" Text="Yes"/>
                        <SelectItem TValue="string" Value="@("no")" Text="No"/>
                        <SelectItem TValue="string" Value="@("maybe")" Text="Maybe"/>
                    </Select>
                </Field>
            </CardBody>
        </Card>
    </Column>
</Row>
</Container>

@code {

    // Binding Test Fields
    private string? _testSelect1;
    private int _testSelect2 = 2;

    private string? selectedCountry;
    private string? selectedCity;
    private int selectedNumber;
    private string? selectedFramework;
    private string? disabledValue = "option1";
    private string? requiredValue;

    private void LoadSelectTestData()
    {
        _testSelect1 = "option3";
        _testSelect2 = 4;
    }

    private void ClearSelectTestData()
    {
        _testSelect1 = null;
        _testSelect2 = 0;
    }

    private void UpdateSelectTestData()
    {
        var options = new[] { "option1", "option2", "option3", "option4" };
        _testSelect1 = options[new Random().Next(options.Length)];
        _testSelect2 = new Random().Next(1, 5);
    }

}