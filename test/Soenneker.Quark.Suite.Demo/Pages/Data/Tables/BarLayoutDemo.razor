@page "/data/tables/bar-layout-demo"
@using Soenneker.Quark.Suite.Demo.Services
@using Soenneker.Quark.Suite.Demo.Dtos

<PageTitle>Bar Layout Demo - Table</PageTitle>

<Container Fluid="true">
    <Div class="demo-hero">
        <Div class="hero-content text-center">
            <Icon Name="columns" Class="demo-icon"/>
            <H1 Class="demo-title">Bar Layout Options</H1>
            <Paragraph Class="demo-subtitle">Explore different positioning options for Table bars</Paragraph>
        </Div>
    </Div>

    <Row>
        <Column ColumnSize="ColumnSize.Is12">
            <Card Class="demo-card">
                <CardHeader>
                    <Div class="card-header-content">
                        <H3>Bottom Bar - Right Only (Fixed Positioning)</H3>
                        <Paragraph>When only TableRight is specified, it now properly positions to the right</Paragraph>
                    </Div>
                </CardHeader>
                <CardBody>
                    <Table @ref="_table1"
                        Options="_tableOptions"
                        TotalRecords="@_totalRecords">

                        <TableElement>
                            <Thead>
                                <Tr>
                                    <Th Data="Name" Sortable="true">Name</Th>
                                    <Th Data="Department" Sortable="true">Department</Th>
                                    <Th Data="Email" Sortable="true">Email</Th>
                                    <Th Data="Salary" Sortable="true">Salary</Th>
                                    <Th Data="HireDate" Sortable="true">Hire Date</Th>
                                    <Th Data="Status" Sortable="true">Status</Th>
                                </Tr>
                            </Thead>
                            <Tbody>
                                @foreach (var employee in _employees)
                                {
                                    <Tr>
                                        <Td>@employee.Name</Td>
                                        <Td>@employee.Department</Td>
                                        <Td>@employee.Email</Td>
                                        <Td>@employee.Salary.ToString("C")</Td>
                                        <Td>@employee.HireDate.ToString("MM/dd/yyyy")</Td>
                                        <Td>@employee.Status</Td>
                                    </Tr>
                                }
                            </Tbody>
                        </TableElement>

                        <TableBottomBar LayoutClass="only-right">
                            <TableRight>
                                <TableInfo />
                                <TablePagination />
                            </TableRight>
                        </TableBottomBar>
                    </Table>
                </CardBody>
            </Card>
        </Column>
    </Row>

    <Row>
        <Column ColumnSize="ColumnSize.Is12">
            <Card Class="demo-card">
                <CardHeader>
                    <Div class="card-header-content">
                        <H3>Top Bar - Left Only (Right Anchored)</H3>
                        <Paragraph>When only TableLeft is specified, it now anchors to the right</Paragraph>
                    </Div>
                </CardHeader>
                <CardBody>
                    <Table @ref="_table2"
                        Options="_tableOptions"
                        TotalRecords="@_totalRecords">

                        <TableTopBar LayoutClass="only-left">
                            <TableLeft>
                                <TableSearch Placeholder="Search employees..." />
                            </TableLeft>
                        </TableTopBar>

                        <TableElement>
                            <Thead>
                                <Tr>
                                    <Th Data="Name" Sortable="true">Name</Th>
                                    <Th Data="Department" Sortable="true">Department</Th>
                                    <Th Data="Email" Sortable="true">Email</Th>
                                    <Th Data="Salary" Sortable="true">Salary</Th>
                                    <Th Data="HireDate" Sortable="true">Hire Date</Th>
                                    <Th Data="Status" Sortable="true">Status</Th>
                                </Tr>
                            </Thead>
                            <Tbody>
                                @foreach (var employee in _employees)
                                {
                                    <Tr>
                                        <Td>@employee.Name</Td>
                                        <Td>@employee.Department</Td>
                                        <Td>@employee.Email</Td>
                                        <Td>@employee.Salary.ToString("C")</Td>
                                        <Td>@employee.HireDate.ToString("MM/dd/yyyy")</Td>
                                        <Td>@employee.Status</Td>
                                    </Tr>
                                }
                            </Tbody>
                        </TableElement>

                        <TableBottomBar>
                            <TableLeft>
                                <TableInfo />
                            </TableLeft>
                            <TableRight>
                                <TablePagination />
                            </TableRight>
                        </TableBottomBar>
                    </Table>
                </CardBody>
            </Card>
        </Column>
    </Row>

    <Row>
        <Column ColumnSize="ColumnSize.Is12">
            <Card Class="demo-card">
                <CardHeader>
                    <Div class="card-header-content">
                        <H3>Standard Layout (Both Left and Right)</H3>
                        <Paragraph>Traditional layout with both left and right sections</Paragraph>
                    </Div>
                </CardHeader>
                <CardBody>
                    <Table @ref="_table3"
                        Options="_tableOptions"
                        TotalRecords="@_totalRecords">

                        <TableTopBar>
                            <TableLeft>
                                <TableSearch Placeholder="Search employees..." />
                            </TableLeft>
                            <TableRight>
                                <Button Class="custom-btn export-btn">
                                    <Icon Name="download" Margin="Margin.Is1.FromEnd"/>Export
                                </Button>
                                <Button Class="custom-btn refresh-btn">
                                    <Icon Name="sync-alt" Margin="Margin.Is1.FromEnd"/>Refresh
                                </Button>
                            </TableRight>
                        </TableTopBar>

                        <TableElement>
                            <Thead>
                                <Tr>
                                    <Th Data="Name" Sortable="true">Name</Th>
                                    <Th Data="Department" Sortable="true">Department</Th>
                                    <Th Data="Email" Sortable="true">Email</Th>
                                    <Th Data="Salary" Sortable="true">Salary</Th>
                                    <Th Data="HireDate" Sortable="true">Hire Date</Th>
                                    <Th Data="Status" Sortable="true">Status</Th>
                                </Tr>
                            </Thead>
                            <Tbody>
                                @foreach (var employee in _employees)
                                {
                                    <Tr>
                                        <Td>@employee.Name</Td>
                                        <Td>@employee.Department</Td>
                                        <Td>@employee.Email</Td>
                                        <Td>@employee.Salary.ToString("C")</Td>
                                        <Td>@employee.HireDate.ToString("MM/dd/yyyy")</Td>
                                        <Td>@employee.Status</Td>
                                    </Tr>
                                }
                            </Tbody>
                        </TableElement>

                        <TableBottomBar>
                            <TableLeft>
                                <TableInfo />
                            </TableLeft>
                            <TableRight>
                                <TablePagination />
                            </TableRight>
                        </TableBottomBar>
                    </Table>
                </CardBody>
            </Card>
        </Column>
    </Row>

    <Row Margin="Margin.Is4.FromTop">
        <Column>
            <Card>
                <CardHeader>
                    <H4>Code Example</H4>
                </CardHeader>
                <CardBody>
                    <CodeEditor ReadOnly="true" 
                                Language="@("html")" 
                                AutoHeight="true" Text="@(@"<Table>
    <TableElement>
        <Thead><Tr><Th Data=""Name"">Name</Th></Tr></Thead>
        <Tbody>
            @foreach (var item in _items)
            {
                <Tr><Td>@item.Name</Td></Tr>
            }
        </Tbody>
    </TableElement>
    <TableBottomBar LayoutClass=""only-right"">
        <TableRight>
            <TableInfo />
            <TablePagination />
        </TableRight>
    </TableBottomBar>
</Table>")" />
                </CardBody>
            </Card>
        </Column>
    </Row>
</Container>

<style>
    .demo-hero {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 4rem 0;
        margin-bottom: 3rem;
        position: relative;
        overflow: hidden;
    }

    .demo-hero::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="white" opacity="0.1"/><circle cx="75" cy="75" r="1" fill="white" opacity="0.1"/><circle cx="50" cy="10" r="0.5" fill="white" opacity="0.1"/><circle cx="10" cy="60" r="0.5" fill="white" opacity="0.1"/><circle cx="90" cy="40" r="0.5" fill="white" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
        opacity: 0.3;
    }

    .hero-content {
        position: relative;
        z-index: 1;
    }

    .demo-icon {
        font-size: 4rem;
        margin-bottom: 1rem;
        display: block;
    }

    .demo-title {
        font-size: 3rem;
        font-weight: 700;
        margin-bottom: 1rem;
        background: linear-gradient(45deg, #fff, #f8f9fa);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .demo-subtitle {
        font-size: 1.2rem;
        opacity: 0.9;
        max-width: 600px;
        margin: 0 auto;
    }

    .demo-card {
        background: white;
        border-radius: 20px;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        border: none;
        margin-bottom: 3rem;
    }

    .card-header {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        border-bottom: 1px solid #dee2e6;
        padding: 2rem;
    }

    .card-header-content h3 {
        color: #495057;
        font-weight: 600;
        margin-bottom: 0.5rem;
    }

    .card-body {
        padding: 2rem;
    }

    .custom-btn {
        background: #007bff;
        color: white;
        border: none;
        border-radius: 8px;
        padding: 0.5rem 1rem;
        font-size: 0.9rem;
        cursor: pointer;
        transition: all 0.2s ease;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }

    .custom-btn:hover {
        background: #0056b3;
        transform: translateY(-1px);
    }

    .export-btn {
        background: #28a745;
    }

    .export-btn:hover {
        background: #1e7e34;
    }

    .refresh-btn {
        background: #17a2b8;
    }

    .refresh-btn:hover {
        background: #117a8b;
    }
</style>

@code {
    private Table? _table1;
    private Table? _table2;
    private Table? _table3;
    private TableOptions _tableOptions = new();
    private List<Employee> _employees = [];
    private int _totalRecords;

    [Inject]
    private EmployeeService EmployeeService { get; set; } = null!;

    protected override void OnInitialized()
    {       
        // Use the EmployeeService to get data
        _employees = EmployeeService.GetAllEmployees();
        _totalRecords = EmployeeService.GetTotalCount();
    }
}
