@page "/data/unorderedlists"

<Container Padding="Padding.Is4.OnY">
    <Row>
        <Column>
            <Div TextAlignment="TextAlignment.Center" Margin="Margin.Is5.FromEnd">
                <H1 Class="display-4" FontWeight="FontWeight.Bold" TextColor="TextColor.Primary">Unordered Lists</H1>
                <Paragraph Class="lead" TextColor="TextColor.Muted">This page demonstrates the UnorderedList and UnorderedListItem components for creating bulleted lists.</Paragraph>
            </Div>
        </Column>
    </Row>

    <Row Gap="Gap.Is4">
        <Column>
            <Div>
                <H2>Basic Unordered Lists</H2>
                <Div Margin="Margin.Is3.FromEnd">
                    <UnorderedList>
                        <UnorderedListItem>First item</UnorderedListItem>
                        <UnorderedListItem>Second item</UnorderedListItem>
                        <UnorderedListItem>Third item</UnorderedListItem>
                        <UnorderedListItem>Fourth item</UnorderedListItem>
                    </UnorderedList>
                </Div>
                <Paragraph TextColor="TextColor.Muted">The UnorderedList component creates HTML &lt;ul&gt; elements with UnorderedListItem children.</Paragraph>
            </Div>

            <Hr/>

            <Div>
                <H2>Nested Unordered Lists</H2>
                <Div Margin="Margin.Is3.FromEnd">
                    <UnorderedList>
                        <UnorderedListItem>Main item 1</UnorderedListItem>
                        <UnorderedListItem>
                            Main item 2
                            <UnorderedList>
                                <UnorderedListItem>Sub item 2.1</UnorderedListItem>
                                <UnorderedListItem>Sub item 2.2</UnorderedListItem>
                                <UnorderedListItem>
                                    Sub item 2.3
                                    <UnorderedList>
                                        <UnorderedListItem>Sub-sub item 2.3.1</UnorderedListItem>
                                        <UnorderedListItem>Sub-sub item 2.3.2</UnorderedListItem>
                                    </UnorderedList>
                                </UnorderedListItem>
                            </UnorderedList>
                        </UnorderedListItem>
                        <UnorderedListItem>Main item 3</UnorderedListItem>
                    </UnorderedList>
                </Div>
            </Div>

            <Hr/>

            <Div>
                <H2>Styled Unordered Lists</H2>
                <Div Margin="Margin.Is3.FromEnd">
                    <H3>List with Custom Styling</H3>
                    <UnorderedList Class="custom-list" Style="border: 2px solid #6f42c1; border-radius: 8px; padding: 20px; background-color: #f8f9fa;">
                        <UnorderedListItem Class="custom-item" Style="margin-bottom: 10px; padding: 5px; background-color: white; border-radius: 4px;">
                            <Strong>Styled item 1</Strong> - This item has custom styling
                        </UnorderedListItem>
                        <UnorderedListItem Class="custom-item" Style="margin-bottom: 10px; padding: 5px; background-color: white; border-radius: 4px;">
                            <Strong>Styled item 2</Strong> - Another styled item
                        </UnorderedListItem>
                        <UnorderedListItem Class="custom-item" Style="margin-bottom: 10px; padding: 5px; background-color: white; border-radius: 4px;">
                            <Strong>Styled item 3</Strong> - Final styled item
                        </UnorderedListItem>
                    </UnorderedList>
                </Div>
            </Div>

            <Hr/>

            <Div>
                <H2>Lists with Different Bullet Styles</H2>
                <Div Margin="Margin.Is3.FromEnd">
                    <Row>
                        <Column Size="ColumnSize.Is6">
                            <H4>Disc Style (Default)</H4>
                            <UnorderedList Style="list-style-type: disc;">
                                <UnorderedListItem>Disc bullet item 1</UnorderedListItem>
                                <UnorderedListItem>Disc bullet item 2</UnorderedListItem>
                                <UnorderedListItem>Disc bullet item 3</UnorderedListItem>
                            </UnorderedList>
                        </Column>
                        <Column Size="ColumnSize.Is6">
                            <H4>Circle Style</H4>
                            <UnorderedList Style="list-style-type: circle;">
                                <UnorderedListItem>Circle bullet item 1</UnorderedListItem>
                                <UnorderedListItem>Circle bullet item 2</UnorderedListItem>
                                <UnorderedListItem>Circle bullet item 3</UnorderedListItem>
                            </UnorderedList>
                        </Column>
                    </Row>
                    <Row Margin="Margin.Is3.FromTop">
                        <Column Size="ColumnSize.Is6">
                            <H4>Square Style</H4>
                            <UnorderedList Style="list-style-type: square;">
                                <UnorderedListItem>Square bullet item 1</UnorderedListItem>
                                <UnorderedListItem>Square bullet item 2</UnorderedListItem>
                                <UnorderedListItem>Square bullet item 3</UnorderedListItem>
                            </UnorderedList>
                        </Column>
                        <Column Size="ColumnSize.Is6">
                            <H4>No Bullets</H4>
                            <UnorderedList Style="list-style-type: none;">
                                <UnorderedListItem>• No bullet item 1</UnorderedListItem>
                                <UnorderedListItem>• No bullet item 2</UnorderedListItem>
                                <UnorderedListItem>• No bullet item 3</UnorderedListItem>
                            </UnorderedList>
                        </Column>
                    </Row>
                </Div>
            </Div>

            <Hr/>

            <Div>
                <H2>Bootstrap List Variants</H2>
                <Div Margin="Margin.Is3.FromEnd">
                    <H3>Unstyled List</H3>
                    <UnorderedList ListVariant="ListVariant.Unstyled">
                        <UnorderedListItem>This list has no bullets</UnorderedListItem>
                        <UnorderedListItem>And no left padding</UnorderedListItem>
                        <UnorderedListItem>Clean and simple</UnorderedListItem>
                    </UnorderedList>

                    <H3 Margin="Margin.Is4.FromTop">Inline List</H3>
                    <UnorderedList ListVariant="ListVariant.Inline">
                        <UnorderedListItem ListVariant="ListVariant.InlineItem">First item</UnorderedListItem>
                        <UnorderedListItem ListVariant="ListVariant.InlineItem">Second item</UnorderedListItem>
                        <UnorderedListItem ListVariant="ListVariant.InlineItem">Third item</UnorderedListItem>
                        <UnorderedListItem ListVariant="ListVariant.InlineItem">Fourth item</UnorderedListItem>
                    </UnorderedList>

                    <H3 Margin="Margin.Is4.FromTop">Inline List with Separators</H3>
                    <UnorderedList ListVariant="ListVariant.Inline">
                        <UnorderedListItem ListVariant="ListVariant.InlineItem">Home</UnorderedListItem>
                        <UnorderedListItem ListVariant="ListVariant.InlineItem">|</UnorderedListItem>
                        <UnorderedListItem ListVariant="ListVariant.InlineItem">About</UnorderedListItem>
                        <UnorderedListItem ListVariant="ListVariant.InlineItem">|</UnorderedListItem>
                        <UnorderedListItem ListVariant="ListVariant.InlineItem">Services</UnorderedListItem>
                        <UnorderedListItem ListVariant="ListVariant.InlineItem">|</UnorderedListItem>
                        <UnorderedListItem ListVariant="ListVariant.InlineItem">Contact</UnorderedListItem>
                    </UnorderedList>

                    <Paragraph TextColor="TextColor.Muted" Margin="Margin.Is3.FromTop">
                        The <Code>ListVariant</Code> property provides clean access to Bootstrap's list variants: 
                        <Code>ListVariant.Unstyled</Code>, <Code>ListVariant.Inline</Code>, and <Code>ListVariant.InlineItem</Code>.
                    </Paragraph>
                </Div>
            </Div>

            <Hr/>

            <Div>
                <H2>CSS list-style-type Property</H2>
                <Div Margin="Margin.Is3.FromEnd">
                    <Row>
                        <Column Size="ColumnSize.Is6">
                            <H3>Circle Markers</H3>
                            <UnorderedList ListStyleType="ListStyleType.Circle">
                                <UnorderedListItem>Circle bullet 1</UnorderedListItem>
                                <UnorderedListItem>Circle bullet 2</UnorderedListItem>
                                <UnorderedListItem>Circle bullet 3</UnorderedListItem>
                            </UnorderedList>
                        </Column>
                        <Column Size="ColumnSize.Is6">
                            <H3>Square Markers</H3>
                            <UnorderedList ListStyleType="ListStyleType.Square">
                                <UnorderedListItem>Square bullet 1</UnorderedListItem>
                                <UnorderedListItem>Square bullet 2</UnorderedListItem>
                                <UnorderedListItem>Square bullet 3</UnorderedListItem>
                            </UnorderedList>
                        </Column>
                    </Row>

                    <Paragraph TextColor="TextColor.Muted" Margin="Margin.Is3.FromTop">
                        The <Code>ListStyleType</Code> builder provides access to CSS <Code>list-style-type</Code> values like 
                        <Code>Circle</Code>, <Code>Square</Code>, <Code>Decimal</Code>, <Code>LowerAlpha</Code>, etc.
                    </Paragraph>
                </Div>
            </Div>

            <Hr/>

            <Div>
                <H2>Lists with Icons and Content</H2>
                <Div Margin="Margin.Is3.FromEnd">
                    <UnorderedList Class="list-unstyled">
                        <UnorderedListItem Class="d-flex align-items-center" Margin="Margin.Is2.FromBottom">
                            <Icon Name="check-circle" TextColor="TextColor.Success" Margin="Margin.Is2.FromEnd" />
                            <Span>Feature completed successfully</Span>
                        </UnorderedListItem>
                        <UnorderedListItem Class="d-flex align-items-center" Margin="Margin.Is2.FromBottom">
                            <Icon Name="clock" TextColor="TextColor.Warning" Margin="Margin.Is2.FromEnd" />
                            <Span>Feature in progress</Span>
                        </UnorderedListItem>
                        <UnorderedListItem Class="d-flex align-items-center" Margin="Margin.Is2.FromBottom">
                            <Icon Name="times-circle" TextColor="TextColor.Danger" Margin="Margin.Is2.FromEnd" />
                            <Span>Feature blocked</Span>
                        </UnorderedListItem>
                        <UnorderedListItem Class="d-flex align-items-center" Margin="Margin.Is2.FromBottom">
                            <Icon Name="info-circle" TextColor="TextColor.Info" Margin="Margin.Is2.FromEnd" />
                            <Span>Feature pending review</Span>
                        </UnorderedListItem>
                    </UnorderedList>
                </Div>
            </Div>

            <Hr/>

            <Div>
                <H2>Interactive Lists</H2>
                <Div Margin="Margin.Is3.FromEnd">
                    <UnorderedList Class="list-unstyled">
                        <UnorderedListItem Margin="Margin.Is2.FromBottom">
                            <Button BackgroundColor="@BackgroundColor.Primary" Size="@Size.Small" @onclick="() => HandleItemClick(1)">
                                <Icon Name="play" Margin="Margin.Is1.FromEnd" />
                                Start Task 1
                            </Button>
                        </UnorderedListItem>
                        <UnorderedListItem Margin="Margin.Is2.FromBottom">
                            <Button BackgroundColor="@BackgroundColor.Success" Size="@Size.Small" @onclick="() => HandleItemClick(2)">
                                <Icon Name="check" Margin="Margin.Is1.FromEnd" />
                                Complete Task 2
                            </Button>
                        </UnorderedListItem>
                        <UnorderedListItem Margin="Margin.Is2.FromBottom">
                            <Button BackgroundColor="@BackgroundColor.Warning" Size="@Size.Small" @onclick="() => HandleItemClick(3)">
                                <Icon Name="edit" Margin="Margin.Is1.FromEnd" />
                                Edit Task 3
                            </Button>
                        </UnorderedListItem>
                    </UnorderedList>
                    
                    <Div Margin="Margin.Is3.FromTop">
                        <Paragraph TextColor="TextColor.Muted">Last clicked: @lastClickedItem</Paragraph>
                    </Div>
                </Div>
            </Div>

            <Hr/>

            <Div>
                <H2>Lists with Badges and Labels</H2>
                <Div Margin="Margin.Is3.FromEnd">
                    <UnorderedList Class="list-unstyled">
                        <UnorderedListItem Class="d-flex justify-content-between align-items-center rounded" Margin="Margin.Is2.FromBottom" Padding="Padding.Is2" BackgroundColor="BackgroundColor.Light">
                            <Span>High Priority Task</Span>
                            <Badge BackgroundColor="@BackgroundColor.Danger">High</Badge>
                        </UnorderedListItem>
                        <UnorderedListItem Class="d-flex justify-content-between align-items-center rounded" Margin="Margin.Is2.FromBottom" Padding="Padding.Is2" BackgroundColor="BackgroundColor.Light">
                            <Span>Medium Priority Task</Span>
                            <Badge BackgroundColor="@BackgroundColor.Warning">Medium</Badge>
                        </UnorderedListItem>
                        <UnorderedListItem Class="d-flex justify-content-between align-items-center rounded" Margin="Margin.Is2.FromBottom" Padding="Padding.Is2" BackgroundColor="BackgroundColor.Light">
                            <Span>Low Priority Task</Span>
                            <Badge BackgroundColor="@BackgroundColor.Success">Low</Badge>
                        </UnorderedListItem>
                    </UnorderedList>
                </Div>
            </Div>

            <Hr/>

            <Div>
                <H2>Lists with Forms</H2>
                <Div Margin="Margin.Is3.FromEnd">
                    <UnorderedList Class="list-unstyled">
                        <UnorderedListItem Margin="Margin.Is3.FromBottom">
                            <Div Class="d-flex align-items-center">
                                <Check @bind-Checked="todoItems[0].IsCompleted" Margin="Margin.Is3.FromEnd" />
                                <TextEdit @bind-Value="todoItems[0].Text" Class="flex-grow-1" />
                                <Button BackgroundColor="@BackgroundColor.Danger" Size="@Size.Small" Margin="Margin.Is2.FromStart" @onclick="() => RemoveItem(0)">
                                    <Icon Name="trash" />
                                </Button>
                            </Div>
                        </UnorderedListItem>
                        <UnorderedListItem Margin="Margin.Is3.FromBottom">
                            <Div Class="d-flex align-items-center">
                                <Check @bind-Checked="todoItems[1].IsCompleted" Margin="Margin.Is3.FromEnd" />
                                <TextEdit @bind-Value="todoItems[1].Text" Class="flex-grow-1" />
                                <Button BackgroundColor="@BackgroundColor.Danger" Size="@Size.Small" Margin="Margin.Is2.FromStart" @onclick="() => RemoveItem(1)">
                                    <Icon Name="trash" />
                                </Button>
                            </Div>
                        </UnorderedListItem>
                        <UnorderedListItem Margin="Margin.Is3.FromBottom">
                            <Div Class="d-flex align-items-center">
                                <Check @bind-Checked="todoItems[2].IsCompleted" Margin="Margin.Is3.FromEnd" />
                                <TextEdit @bind-Value="todoItems[2].Text" Class="flex-grow-1" />
                                <Button BackgroundColor="@BackgroundColor.Danger" Size="@Size.Small" Margin="Margin.Is2.FromStart" @onclick="() => RemoveItem(2)">
                                    <Icon Name="trash" />
                                </Button>
                            </Div>
                        </UnorderedListItem>
                    </UnorderedList>
                </Div>
            </Div>

            <Hr/>

            <Div>
                <H2>UnorderedList Component Properties</H2>
                <Div BackgroundColor="BackgroundColor.Light" Padding="Padding.Is3" Margin="Margin.Is3.FromBottom">
                    <H3>UnorderedList Features</H3>
                    <Paragraph>The UnorderedList and UnorderedListItem components provide:</Paragraph>
                    <UnorderedList>
                        <UnorderedListItem><Strong>UnorderedList:</Strong> Main container for bulleted lists</UnorderedListItem>
                        <UnorderedListItem><Strong>UnorderedListItem:</Strong> Individual list items</UnorderedListItem>
                        <UnorderedListItem><Strong>Nesting:</Strong> Support for nested lists</UnorderedListItem>
                        <UnorderedListItem><Strong>Styling:</Strong> Custom CSS classes and styles</UnorderedListItem>
                        <UnorderedListItem><Strong>Bullet Styles:</Strong> Different list-style-type options</UnorderedListItem>
                        <UnorderedListItem><Strong>Interactive Content:</Strong> Buttons, forms, and other components</UnorderedListItem>
                        <UnorderedListItem><Strong>Accessibility:</Strong> Proper semantic HTML structure</UnorderedListItem>
                        <UnorderedListItem><Strong>Flexibility:</Strong> Mix of text and other components</UnorderedListItem>
                    </UnorderedList>
                </Div>
            </Div>

            <Hr/>

            <Div>
                <H2>Accessibility Features</H2>
                <Div Margin="Margin.Is3.FromEnd">
                    <UnorderedList Role="list" AriaLabel="Accessible list of features">
                        <UnorderedListItem Role="listitem" AriaLabel="Feature 1">Accessible list item 1</UnorderedListItem>
                        <UnorderedListItem Role="listitem" AriaLabel="Feature 2">Accessible list item 2</UnorderedListItem>
                        <UnorderedListItem Role="listitem" AriaLabel="Feature 3">Accessible list item 3</UnorderedListItem>
                    </UnorderedList>
                    <Paragraph TextColor="TextColor.Muted" Margin="Margin.Is2.FromTop">This list has proper ARIA attributes for screen readers.</Paragraph>
                </Div>
            </Div>
        </Column>
    </Row>
</Container>

@code {
    private string lastClickedItem = "None";

    private List<TodoItem> todoItems =
    [
        new TodoItem { Text = "Complete project documentation", IsCompleted = false },
        new TodoItem { Text = "Review code changes", IsCompleted = true },
        new TodoItem { Text = "Update user manual", IsCompleted = false }
    ];

    private void HandleItemClick(int itemNumber)
    {
        lastClickedItem = $"Task {itemNumber}";
        StateHasChanged();
    }

    private void RemoveItem(int index)
    {
        if (index >= 0 && index < todoItems.Count)
        {
            todoItems.RemoveAt(index);
            StateHasChanged();
        }
    }

    public class TodoItem
    {
        public string Text { get; set; } = string.Empty;
        public bool IsCompleted { get; set; } = false;
    }

    protected override void OnInitialized()
    {
    }
}
