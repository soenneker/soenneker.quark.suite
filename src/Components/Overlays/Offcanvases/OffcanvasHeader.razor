@namespace Soenneker.Quark
@inherits Soenneker.Quark.Element
@implements IOffcanvasHeader

<div @attributes="BuildAttributes()">
    @if (Title is not null)
    {
        <h5 class="offcanvas-title">@Title</h5>
    }
    @ChildContent
    @if (ShowCloseButton)
    {
        <Button Type="@ButtonType.Button" Class="btn-close" OnClick="HandleClose"></Button>
    }
    
</div>

@code {
    public override string? ThemeKey { get; set; } = "OffcanvasHeader";

    [Parameter]
    public bool ShowCloseButton { get; set; } = true;

    [CascadingParameter]
    public Offcanvas? ParentOffcanvas { get; set; }

    protected override Dictionary<string, object> BuildAttributes()
    {
        var attrs = base.BuildAttributes();
        BuildClassAttribute(attrs, (ref PooledStringBuilder cls) => AppendClass(ref cls, "offcanvas-header"));
        return attrs;
    }

    private async Task HandleClose(MouseEventArgs args)
    {
        if (ParentOffcanvas is not null)
            await ParentOffcanvas.RequestClose();
    }
}


