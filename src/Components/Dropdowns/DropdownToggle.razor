@namespace Soenneker.Quark
@inherits Soenneker.Quark.Element
@using Soenneker.Blazor.Extensions.EventCallback
@implements IDropdownToggle

<button @attributes="BuildAttributes()" type="button" data-bs-toggle="dropdown" aria-expanded="false" @onclick="OnClickHandler">
    @ChildContent
</button>

@code {
    public override string? ThemeKey { get; set; } = "DropdownToggle";

    [Parameter]
    public bool Disabled { get; set; }

    [Parameter]
    public bool IsSplit { get; set; }

    [Parameter]
    public EventCallback<MouseEventArgs> Clicked { get; set; }

    private async Task OnClickHandler(MouseEventArgs e)
    {
        if (!Disabled)
            await Clicked.InvokeIfHasDelegate(e);
    }

    protected override Dictionary<string, object> BuildAttributes()
    {
        var attributes = base.BuildAttributes();

        BuildClassAttribute(attributes, (ref PooledStringBuilder cls) =>
        {
            if (IsSplit)
            {
                AppendClass(ref cls, "btn");
                AppendClass(ref cls, "btn-outline-secondary");
                AppendClass(ref cls, "dropdown-toggle");
                AppendClass(ref cls, "dropdown-toggle-split");
            }
            else
            {
                AppendClass(ref cls, "btn");
                AppendClass(ref cls, "btn-secondary");
                AppendClass(ref cls, "dropdown-toggle");
            }
            
            if (Disabled)
                AppendClass(ref cls, "disabled");
        });

        if (Disabled)
        {
            attributes["disabled"] = true;
        }

        return attributes;
    }
}
