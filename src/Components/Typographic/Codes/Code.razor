@namespace Soenneker.Quark
@inherits Soenneker.Quark.TypographicElement
@implements ICode

<code @attributes="BuildAttributes()">@ChildContent</code>

@code {
	public override string? ThemeKey { get; set; } = "Code";

    [Parameter]
    public string? Language { get; set; }

    [Parameter]
    public bool Inline { get; set; } = true;

    [Parameter]
    public bool Highlight { get; set; } = true;

    [Parameter]
    public string? Theme { get; set; } = "default";

    protected override Dictionary<string, object> BuildAttributes()
    {
        var attributes = base.BuildAttributes();

        if (Language.HasContent())
            attributes["data-language"] = Language;

        // Add default styling if no custom class
        if (!Class.HasContent())
        {
            BuildClassAttribute(attributes, (ref PooledStringBuilder cls) =>
            {
                if (Inline)
                {
                    AppendClass(ref cls, "text-bg-light");
                    AppendClass(ref cls, "px-1");
                    AppendClass(ref cls, "py-0");
                    AppendClass(ref cls, "rounded");
                }
            });
        }

        return attributes;
    }
}
