@namespace Soenneker.Quark

@inherits Soenneker.Quark.Element
@implements IBarBrand

<Div @attributes="BuildAttributes()">
    @ChildContent
</Div>

@code {
	public override string? ThemeKey { get; set; } = "BarBrand";

    [Parameter]
    public string? To { get; set; }

    [CascadingParameter]
    public BarMode Mode { get; set; } = BarMode.Horizontal;

    [CascadingParameter]
    public bool VerticalBarCollapsed { get; set; }

    protected override bool ShouldRender()
    {
        // For vertical bars, always render when vertical bar collapse state might change
        // The base component's render key doesn't track cascading parameters
        if (Mode != BarMode.Horizontal)
        {
            return true;
        }

        return base.ShouldRender();
    }

    protected override Dictionary<string, object> BuildAttributes()
    {
        var attributes = base.BuildAttributes();

        // Apply different classes based on mode
        if (Mode == BarMode.Horizontal)
        {
            AppendToClassAttr(attributes, "navbar-brand");
            AppendToClassAttr(attributes, "d-flex");
            AppendToClassAttr(attributes, "align-items-center");
        }
        else
        {
            // For vertical mode, use more generic styling
            AppendToClassAttr(attributes, "d-flex");
            AppendToClassAttr(attributes, "align-items-center");
            AppendToClassAttr(attributes, "p-3");
            
            // Add transition for smooth fade in/out
            AppendStyleDeclAttr(attributes, "transition: opacity 0.3s ease, max-height 0.3s ease, padding 0.3s ease");
            AppendStyleDeclAttr(attributes, "overflow: hidden");
            
            // Hide the brand when vertical bar is collapsed with smooth transition
            if (VerticalBarCollapsed)
            {
                AppendStyleDeclAttr(attributes, "opacity: 0");
                AppendStyleDeclAttr(attributes, "max-height: 0");
                AppendStyleDeclAttr(attributes, "padding-top: 0");
                AppendStyleDeclAttr(attributes, "padding-bottom: 0");
            }
            else
            {
                AppendStyleDeclAttr(attributes, "opacity: 1");
                AppendStyleDeclAttr(attributes, "max-height: 100px");
            }
        }

        if (To.HasContent())
        {
            attributes["href"] = To;
        }

        return attributes;
    }
}
