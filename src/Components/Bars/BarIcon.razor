@namespace Soenneker.Quark
@inherits Soenneker.Quark.Element
@implements IBarIcon

<Div @attributes="BuildAttributes()">
    <Icon Name="@Name"
          IconStyle="@IconStyle"
          Family="@Family"
          IconSize="@IconSize"
          Size="@Size"
          SpinReverse="@SpinReverse"
          Rotate="@Rotate"
          RotateByDegrees="@RotateByDegrees"
          Flip="@Flip"
          IconAnimation="@IconAnimation"/>
</Div>

@code {
    public override string? ThemeKey { get; set; } = "BarIcon";

    [Parameter]
    public string? Name { get; set; }

    [Parameter]
    public IconStyle? IconStyle { get; set; }

    [Parameter]
    public IconFamily? Family { get; set; }

    [Parameter]
    public IconSize? IconSize { get; set; }

    [Parameter]
    public CssValue<SizeBuilder>? Size { get; set; }

    [Parameter]
    public bool SpinReverse { get; set; }

    [Parameter]
    public IconRotate? Rotate { get; set; }

    [Parameter]
    public int? RotateByDegrees { get; set; }

    [Parameter]
    public IconFlip? Flip { get; set; }

    [Parameter]
    public IconAnimation? IconAnimation { get; set; }

    protected override Dictionary<string, object> BuildAttributes()
    {
        var attributes = base.BuildAttributes();
        BuildClassAttribute(attributes, (ref PooledStringBuilder cls) => AppendClass(ref cls, "b-bar-icon"));
        return attributes;
    }

}