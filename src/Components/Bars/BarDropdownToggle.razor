@namespace Soenneker.Quark

@inherits Soenneker.Quark.Element
@implements IBarDropdownToggle

<button @attributes="BuildAttributes()" data-bs-toggle="collapse" data-bs-target="#@TargetId" aria-expanded="@((!ForceCollapseAll && Expanded).ToString().ToLower())">
    @ChildContent
</button>

@code {
    public override string? ThemeKey { get; set; } = "BarDropdownToggle";

    [Parameter]
    public EventCallback<MouseEventArgs> OnToggle { get; set; }

    [Parameter]
    public bool? Disabled { get; set; }

    [Parameter]
    public double Indentation { get; set; } = 1.5d;

    [Parameter]
    public bool Expanded { get; set; }

    [CascadingParameter]
    public BarMode Mode { get; set; } = BarMode.Horizontal;

    [CascadingParameter]
    public BarDropdown? ParentDropdown { get; set; }

    [CascadingParameter]
    public bool SidebarCollapsed { get; set; }
    
    [CascadingParameter]
    public bool ForceCollapseAll { get; set; }


    private string TargetId => ParentDropdown?.CollapseId ?? "";

    protected override bool ShouldRender()
    {
        // For vertical bars, always render when sidebar collapse state might change
        // The base component's render key doesn't track cascading parameters
        if (Mode != BarMode.Horizontal)
        {
            return true;
        }

        return base.ShouldRender();
    }

    protected override Dictionary<string, object> BuildAttributes()
    {
        var attributes = base.BuildAttributes();

        BuildClassAttribute(attributes, (ref PooledStringBuilder cls) =>
        {
            AppendClass(ref cls, "btn");
            AppendClass(ref cls, "btn-toggle");
            AppendClass(ref cls, "align-items-center");
            AppendClass(ref cls, "rounded");
            
            var shouldBeCollapsed = ForceCollapseAll || !Expanded;
            if (shouldBeCollapsed)
                AppendClass(ref cls, "collapsed");
            
            if (Disabled == true)
                AppendClass(ref cls, "disabled");

            if (Mode != BarMode.Horizontal)
            {
                AppendClass(ref cls, "d-flex");
                AppendClass(ref cls, "align-items-center");
                AppendClass(ref cls, "position-relative");
                if (!SidebarCollapsed)
                    AppendClass(ref cls, "w-100");
            }
        });

        if (Disabled == true)
            attributes["aria-disabled"] = "true";

        return attributes;
    }
}
