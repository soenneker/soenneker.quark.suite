@namespace Soenneker.Quark
@inherits Soenneker.Quark.Element
@implements IBarDropdownMenu

<Div Class="collapse" Id="@ParentDropdown?.CollapseId" data-bs-parent="@CollapseParent" @attributes="BuildAttributes()">
    <ul class="btn-toggle-nav list-unstyled fw-normal pb-1 small">
        @ChildContent
    </ul>
</Div>

@code {
    public override string? ThemeKey { get; set; } = "BarDropdownMenu";

    [Parameter]
    public bool Show { get; set; }

    [Parameter]
    public bool RightAligned { get; set; }

    [CascadingParameter]
    public BarMode Mode { get; set; } = BarMode.Horizontal;

    [CascadingParameter]
    public BarDropdown? ParentDropdown { get; set; }

    [CascadingParameter]
    public bool SidebarCollapsed { get; set; }

    [CascadingParameter]
    public string? CollapseParent { get; set; }
    
    [CascadingParameter]
    public bool ForceCollapseAll { get; set; }

    protected override bool ShouldRender()
    {
        // For vertical bars, always render when sidebar collapse state might change
        // The base component's render key doesn't track cascading parameters
        if (Mode != BarMode.Horizontal)
        {
            return true;
        }

        return base.ShouldRender();
    }

    protected override Dictionary<string, object> BuildAttributes()
    {
        var attributes = base.BuildAttributes();

        var baseClass = "collapse";
        
        // When the sidebar is collapsed, suppress initial "show" state;
        // the panel should appear only after an explicit click.
        // Also suppress show state when force collapse is active
        if (Show && !SidebarCollapsed && !ForceCollapseAll)
            baseClass = $"{baseClass} show";
        
        // Always suppress show state when sidebar is collapsed to prevent panels from staying open
        if (SidebarCollapsed)
            baseClass = baseClass.Replace(" show", "");

        // For vertical mode, let dropdowns size naturally instead of forcing w-100
        // This allows the dropdown to have a more appropriate width when sidebar is expanded

        AppendToClassAttr(attributes, baseClass);

        return attributes;
    }
}
