@namespace Soenneker.Quark
@inherits Soenneker.Quark.Element
@implements IField

<CascadingValue Value="@this" IsFixed>
    <div @attributes="BuildAttributes()">
        @ChildContent
    </div>
</CascadingValue>

@code {
    public override string? ThemeKey { get; set; } = "Field";

    private bool _horizontal;
    private List<Component>? _childComponents;

    [Parameter]
    public bool Horizontal
    {
        get => _horizontal;
        set
        {
            _horizontal = value;
            _childComponents?.ForEach(x => StateHasChanged());
        }
    }

    internal void RegisterChild(Component component)
    {
        _childComponents ??= [];
        _childComponents.Add(component);
    }

    internal void UnregisterChild(Component component)
    {
        _childComponents?.Remove(component);
    }

    protected override Dictionary<string, object> BuildAttributes()
    {
        var attributes = base.BuildAttributes();

        BuildClassAttribute(attributes, (ref PooledStringBuilder cls) =>
        {
            AppendClass(ref cls, "form-group");
            
            if (_horizontal)
                AppendClass(ref cls, "row");
        });

        return attributes;
    }

}