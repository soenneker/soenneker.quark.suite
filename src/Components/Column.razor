@namespace Soenneker.Quark
@inherits Soenneker.Quark.Element
@implements IColumn

<div @attributes="BuildAttributes()">
	@ChildContent
</div>

@code {
	public override string? ThemeKey { get; set; } = "Column";

    [Parameter]
    public CssValue<ColumnSizeBuilder>? ColumnSize { get; set; }

    [Parameter]
    public CssValue<ColumnOffsetBuilder>? ColumnOffset { get; set; }

    [Parameter]
    public CssValue<ColumnOrderBuilder>? ColumnOrder { get; set; }

    [Parameter]
    public CssValue<ColumnAutoBuilder>? ColumnAuto { get; set; }
    
    protected override Dictionary<string, object> BuildAttributes()
    {
        Attributes = base.BuildAttributes();
        
        AppendToClassAttr(Attributes, "col");

        // Add column-specific CSS values
        AddColumnCss(ColumnSize);
        AddColumnCss(ColumnOffset);
        AddColumnCss(ColumnOrder);
        AddColumnCss(ColumnAuto);

        return Attributes;
    }

    private void AddColumnCss<T>(CssValue<T>? cssValue) where T : class, ICssBuilder
    {
        if (cssValue is { IsEmpty: false })
        {
            var css = cssValue.Value.ToString();
            if (css.HasContent())
            {
                if (cssValue.Value.IsCssStyle)
                {
                    AppendStyleDeclAttr(Attributes, css);
                }
                else
                {
                    AppendToClassAttr(Attributes, css);
                }
            }
        }
    }
}
