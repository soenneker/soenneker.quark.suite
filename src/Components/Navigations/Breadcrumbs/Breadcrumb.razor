@namespace Soenneker.Quark
@inherits Soenneker.Quark.Element
@implements IBreadcrumb

<Nav @attributes="BuildAttributes()">
    <OrderedList @attributes="BuildListAttributes()">
        @ChildContent
    </OrderedList>
</Nav>

@code {
	public override string? ThemeKey { get; set; } = "Breadcrumb";

    [Parameter]
    public bool Large { get; set; }

    [Parameter]
    public bool Small { get; set; }

    [Parameter]
    public bool Divider { get; set; }

    [Parameter]
    public string? DividerText { get; set; }

    [Parameter]
    public string? AriaLabel { get; set; }

    protected override Dictionary<string, object> BuildAttributes()
    {
        var attributes = base.BuildAttributes();

        // Set default aria-label for the Nav component if none provided
        if (!AriaLabel.HasContent())
        {
            attributes["AriaLabel"] = "breadcrumb";
        }

        return attributes;
    }

    private Dictionary<string, object> BuildListAttributes()
    {
        var attributes = new Dictionary<string, object>();

        BuildClassAttribute(attributes, (ref PooledStringBuilder cls) =>
        {
            AppendClass(ref cls, "breadcrumb");
            
            if (Large)
                AppendClass(ref cls, "breadcrumb-lg");
            if (Small)
                AppendClass(ref cls, "breadcrumb-sm");
        });

        return attributes;
    }
}
