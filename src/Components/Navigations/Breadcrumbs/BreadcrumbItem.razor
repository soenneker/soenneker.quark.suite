@namespace Soenneker.Quark
@inherits Soenneker.Quark.Element
@implements IBreadcrumbItem

@if (To.HasContent())
{
    <OrderedListItem @attributes="BuildListItemAttributes()">
        <Anchor To="@To" @attributes="BuildAttributes()">
            @ChildContent
        </Anchor>
    </OrderedListItem>
}
else
{
    <OrderedListItem @attributes="BuildAttributes()">
        @ChildContent
    </OrderedListItem>
}

@code {
    public override string? ThemeKey { get; set; } = "BreadcrumbItem";

    [Parameter]
    public string? To { get; set; }

    [Parameter]
    public bool Active { get; set; }

    protected override Dictionary<string, object> BuildAttributes()
    {
        var attributes = base.BuildAttributes();

        BuildClassAttribute(attributes, (ref PooledStringBuilder cls) =>
        {
            AppendClass(ref cls, "breadcrumb-item");
            
            if (Active)
                AppendClass(ref cls, "active");
        });

        if (Active)
        {
            attributes["aria-current"] = "page";
        }

        return attributes;
    }

    private Dictionary<string, object> BuildListItemAttributes()
    {
        var attributes = new Dictionary<string, object>();
        BuildClassAttribute(attributes, (ref PooledStringBuilder cls) => AppendClass(ref cls, "breadcrumb-item"));
        return attributes;
    }
}
