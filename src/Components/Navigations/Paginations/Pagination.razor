@namespace Soenneker.Quark

@inherits Soenneker.Quark.Element
@implements IPagination

<ul @attributes="BuildAttributes()">
	@ChildContent
</ul>

@code {
	public override string? ThemeKey { get; set; } = "Pagination";

    [Parameter]
    public CssValue<SizeBuilder>? Size { get; set; } = Quark.Size.Default;

    [Parameter]
    public bool Vertical { get; set; }

    private string? GetSizeClass()
    {
        if (Size == Quark.Size.Default)
            return null;

        string? token = null;
        var isTheme = Size?.TryGetBootstrapThemeToken(out token) == true;
        if (isTheme && token is not null)
            return $"pagination-{token}";

        return Size?.ToString() != null ? $"pagination-{Size}" : null;
    }

    protected override Dictionary<string, object> BuildAttributes()
    {
        var attributes = base.BuildAttributes();

        BuildClassAttribute(attributes, (ref PooledStringBuilder cls) =>
        {
            AppendClass(ref cls, "pagination");
            
            var sizeClass = GetSizeClass();
            if (sizeClass != null)
                AppendClass(ref cls, sizeClass);
                
            if (Vertical)
                AppendClass(ref cls, "flex-column");
        });

        return attributes;
    }
}
