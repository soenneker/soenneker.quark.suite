@namespace Soenneker.Quark
@inherits Element

@if (IsLoading)
{
    <div @attributes="BuildAttributes()">
        <div Class="quark-table-loader-overlay">
            <div Class="quark-table-loader-content">
                <div Class="quark-table-loader-default">
                    <div Class="quark-table-spinner"></div>
                    <span>Loading...</span>
                </div>
                @ChildContent
            </div>
        </div>
    </div>
}

@code {
	public override string? ThemeKey { get; set; } = "TableLoader";

	[CascadingParameter(Name = "IsLoading")]
	public bool IsLoading { get; set; }

	private bool _lastIsLoading;

	protected override bool ShouldRender()
	{
		if (QuarkOptions.AlwaysRender)
			return true;

		if (IsLoading != _lastIsLoading)
		{
			_lastIsLoading = IsLoading;
			return true;
		}

		return base.ShouldRender();
	}

	protected override Dictionary<string, object> BuildAttributes()
	{
		var attributes = base.BuildAttributes();
		
		BuildClassAttribute(attributes, (ref PooledStringBuilder cls) =>
		{
			if (IsLoading)
			{
				AppendClass(ref cls, "quark-table-loader");
				AppendClass(ref cls, "quark-table-loader-active");
			}
		});
		
		return attributes;
	}

}
