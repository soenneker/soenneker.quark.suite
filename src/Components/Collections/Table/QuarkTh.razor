@namespace Soenneker.Quark
@inherits Element

<th @onclick="HandleClick" @attributes="BuildAttributes()">
	@ChildContent @(Sortable ? GetSortIndicator() : string.Empty)
</th>

@code {
	public override string? ThemeKey { get; set; } = "QuarkTh";

	[CascadingParameter]
	private IQuarkTable? QuarkTable { get; set; }

	[Parameter]
	public bool Sortable { get; set; } = true;

	[Parameter]
	public bool Searchable { get; set; } = true;

	[Parameter]
	public string Align { get; set; } = string.Empty;

	[Parameter]
	public string? Data { get; set; }

	[Parameter]
	public string? Name { get; set; }

	private int _columnIndex = -1;

	protected override void OnInitialized()
	{
		// Register this column with the parent table to get its position
		if (QuarkTable != null)
		{
			_columnIndex = QuarkTable.RegisterColumn(this);
		}
	}

	private string GetSortClass()
	{
		if (QuarkTable == null)
			return string.Empty;

		return QuarkTable.GetSortClassByIndex(_columnIndex);
	}

	private string GetSortIndicator()
	{
		if (QuarkTable == null)
			return " â†•";

		return QuarkTable.GetSortIndicatorByIndex(_columnIndex);
	}

	private string GetAlignStyle()
	{
		if (Align.IsNullOrWhiteSpace())
			return string.Empty;

		var align = Align.ToLowerInvariantFast();

		return align switch
		{
			"left" => "text-align: left;",
			"center" => "text-align: center;",
			"right" => "text-align: right;",
			_ => string.Empty
		};
	}

	protected override Dictionary<string, object> BuildAttributes()
	{
		var attributes = base.BuildAttributes();

		BuildClassAttribute(attributes, (ref PooledStringBuilder cls) =>
		{
			AppendClass(ref cls, "quark-table-sortable");
			
			if (Sortable)
			{
				var sortClass = GetSortClass();
				if (sortClass != null)
					AppendClass(ref cls, sortClass);
			}
		});

		var alignStyle = GetAlignStyle();
		if (Sortable || alignStyle.HasContent())
		{
			BuildStyleAttribute(attributes, (ref PooledStringBuilder sty) =>
			{
				if (Sortable)
					AppendStyleDecl(ref sty, "cursor:pointer;");
				
				if (alignStyle.HasContent())
					AppendStyleDecl(ref sty, alignStyle);
			});
		}

		return attributes;
	}

}
