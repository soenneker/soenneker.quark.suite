@namespace Soenneker.Quark
@inherits Soenneker.Quark.Element
@implements IStepContent

<CascadingValue Value="_state">
    <Div Class="@GetStepsContentClasses()" @attributes="BuildAttributes()">
        @ChildContent
    </Div>
</CascadingValue>

@code {
	public override string? ThemeKey { get; set; } = "StepContent";

    private StepContentState _state = new();
    private readonly List<string> _stepPanels = [];
    private StepState? _parentStepsState;

    [Parameter]
    public string SelectedPanel
    {
        get => _state.SelectedPanel;
        set
        {
            if (value == _state.SelectedPanel)
                return;

            _state = _state with { SelectedPanel = value };
            SelectedPanelChanged.InvokeAsync(_state.SelectedPanel);
            StateHasChanged();
        }
    }

    [Parameter]
    public EventCallback<string> SelectedPanelChanged { get; set; }

    [CascadingParameter]
    public StepState? ParentStepsState
    {
        get => _parentStepsState;
        set
        {
            if (_parentStepsState == value)
                return;

            _parentStepsState = value;
            
            // Sync with the parent Steps component's selected step
            if (_parentStepsState != null && _parentStepsState.SelectedStep != _state.SelectedPanel)
            {
                _state = _state with { SelectedPanel = _parentStepsState.SelectedStep };
                // Nudge render key so this component re-renders when the selected step changes
                AriaDescribedBy = _state.SelectedPanel;
                StateHasChanged();
            }
        }
    }

    internal void NotifyStepPanelInitialized(string name)
    {
        if (!_stepPanels.Contains(name))
            _stepPanels.Add(name);
    }

    internal void NotifyStepPanelRemoved(string name)
    {
        if (_stepPanels.Contains(name))
            _stepPanels.Remove(name);
    }

    public Task SelectPanel(string name)
    {
        SelectedPanel = name;
        return Task.CompletedTask;
    }

    private string GetStepsContentClasses()
    {
        return "tab-content mt-3";
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }
}
