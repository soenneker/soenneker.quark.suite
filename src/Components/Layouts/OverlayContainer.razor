@namespace Soenneker.Quark
@inherits Soenneker.Quark.Element
@implements IOverlayContainer

@inject IOffcanvasCoordinator OffcanvasCoordinator
@inject IOffcanvasInterop OffcanvasInterop

<div @attributes="BuildAttributes()">
    @ChildContent
</div>

@code {
    public override string? ThemeKey { get; set; } = "OverlayContainer";

    protected override async Task OnInitializedAsync()
    {
        OffcanvasCoordinator.StateChanged += HandleChanged;
        await OffcanvasInterop.Initialize();
        await base.OnInitializedAsync();
    }

    private void HandleChanged()
    {
        InvokeAsync(StateHasChanged);
    }

    protected override Dictionary<string, object> BuildAttributes()
    {
        var attributes = base.BuildAttributes();
        
        BuildClassAttribute(attributes, (ref PooledStringBuilder cls) =>
        {
            AppendClass(ref cls, "quark-overlay-container");
            
            if (OffcanvasCoordinator.ActiveCount > 0)
                AppendClass(ref cls, "offcanvas-open");
        });
        
        return attributes;
    }

    public override ValueTask DisposeAsync()
    {
        OffcanvasCoordinator.StateChanged -= HandleChanged;
        return base.DisposeAsync();
    }

}