@namespace Soenneker.Quark
@inherits Soenneker.Quark.Element
@implements ILayoutContainer

<div @attributes="BuildAttributes()">
    @ChildContent
</div>

@code {
    public override string? ThemeKey { get; set; } = "LayoutContainer";

    protected override Dictionary<string, object> BuildAttributes()
    {
        var attributes = base.BuildAttributes();
        
        // Use standard Bootstrap classes for layout container
        // Add flex-column to stack header and content vertically
        // Add flex-grow-1 to fill remaining space in the parent flex container
        BuildClassAttribute(attributes, (ref PooledStringBuilder cls) =>
        {
            AppendClass(ref cls, "d-flex");
            AppendClass(ref cls, "flex-column");
            AppendClass(ref cls, "flex-grow-1");
        });
        BuildStyleAttribute(attributes, (ref PooledStringBuilder sty) => AppendStyleDecl(ref sty, "min-width: 0")); // Prevent flex item from overflowing
        
        return attributes;
    }
}
