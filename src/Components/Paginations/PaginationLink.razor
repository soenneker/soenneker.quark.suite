@namespace Soenneker.Quark
@inherits Soenneker.Quark.Element
@implements IPaginationLink

<Anchor @attributes="BuildAttributes()">
	@ChildContent
</Anchor>

@code {
	public override string? ThemeKey { get; set; } = "PaginationLink";

    [Parameter]
    public bool Active { get; set; }

    [Parameter]
    public bool Disabled { get; set; }


    protected override Dictionary<string, object> BuildAttributes()
    {
        var attributes = base.BuildAttributes();

        BuildClassAttribute(attributes, (ref PooledStringBuilder cls) =>
        {
            AppendClass(ref cls, "page-link");
            
            if (Active)
                AppendClass(ref cls, "active");
            if (Disabled)
                AppendClass(ref cls, "disabled");
        });

        if (Disabled)
        {
            attributes["aria-disabled"] = "true";
            // Set tabindex only if not already set via TabIndex property
            if (!attributes.ContainsKey("tabindex"))
                attributes["tabindex"] = -1;
        }
        else
        {
            // Avoid navigation while still rendering as a link
            attributes["href"] = attributes.ContainsKey("href") ? attributes["href"] : "javascript:void(0)";
            // Set role only if not already set via Role property
            if (!attributes.ContainsKey("role"))
                attributes["role"] = "button";
        }

        return attributes;
    }
}
